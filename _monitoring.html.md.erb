
<%# WARNING!!!! %>
<%# DO NOT ADD READBILITY LINE WRAPPING TO THIS CONTENT THE LONG LINES MUSt REMAIN TO CORRECTLY FORMAT THE FOLLOWING SECTION'S MARKDOWN CONTENT %>
<%# <!-- WARNING!!!! --> %>
In the **Monitoring** pane of the <%= vars.product_tile %> tile, you can choose to integrate <%= vars.product_short %> with several external monitoring systems.  

By default, monitoring is disabled.  

  ![Monitoring pane configuration](images/monitoring.png)

####<a id='wavefront'></a> Wavefront

You can monitor Kubernetes clusters and pods metrics externally using the integration with <a href="https://docs.wavefront.com">Wavefront by VMware</a>.  

<p class="note"><strong>Note:</strong> Before you configure Wavefront integration, you must have an active Wavefront account and access to a Wavefront instance. You provide your Wavefront access token during configuration and enabling errands. For additional information, see the <a href="https://docs.wavefront.com/integrations_tkgi.html">Wavefront documentation</a>.</p>

To enable and configure Wavefront monitoring, do the following:  

1. In the <%= vars.product_tile %> tile, select **Monitoring**.
1. Under **Wavefront Integration**, select **Yes**.
  ![Wavefront configuration](images/monitoring-wavefront-config.png)
1. Under **Wavefront URL**, enter the URL of your Wavefront subscription. For example:
    <pre>
    https<span>:</span>//try.wavefront.com/api
    </pre>
1. Under **Wavefront Access Token**, enter the API token for your Wavefront subscription.
1. To configure Wavefront to send alerts by email, enter email addresses or Wavefront Target IDs 
separated by commas under **Wavefront Alert Recipient**, using the following syntax:

    ```
    USER-EMAIL,WAVEFRONT-TARGETID_001,WAVEFRONT-TARGETID_002
    ```
    Where:  
    * `USER-EMAIL` is the alert recipient's email address.  
    * `WAVEFRONT-TARGETID_001` and `WAVEFRONT-TARGETID_002` are your comma-delimited Wavefront Target IDs.  

    For example:
    <pre>
    randomuser<span>@</span>example.com,51n6psdj933ozdjf
    </pre>

To create alerts, you must enable errands in <%= vars.product_short %>.  

1. In the <%= vars.product_tile %> tile, select **Errands**.
1. On the **Errands** pane, enable **Create pre-defined Wavefront alerts errand**.
1. Enable **Delete pre-defined Wavefront alerts errand**.
1. Click **Save**. Your settings apply to any clusters created after you have saved these configuration settings and clicked **Apply Changes**.

The <%= vars.product_tile %> tile does not validate your Wavefront configuration settings. To verify your setup, look for cluster and pod metrics in Wavefront.

<% if current_page.data.iaas == "vSphere" || current_page.data.iaas == "vSphere-NSX-T" %>
####<a id='realize'></a> VMware vRealize Operations Management Pack for Container Monitoring

You can monitor <%= vars.product_short %> Kubernetes clusters with VMware vRealize Operations Management Pack for Container Monitoring.  

To integrate <%= vars.product_short %> with VMware vRealize Operations Management Pack for Container Monitoring, you must deploy a container running [cAdvisor](https://github.com/google/cadvisor) in your PKS deployment.  

cAdvisor is an open source tool that provides monitoring and statistics for Kubernetes clusters.  

To deploy a cAdvisor container, do the following:  

1. Select **Monitoring**.  
1. Under **Deploy cAdvisor**, select **Yes**.  
1. Click **Save**.

For more information about integrating this type of monitoring with PKS, see the [VMware vRealize Operations Management Pack for Container Monitoring User Guide](https://docs.vmware.com/en/Management-Packs-for-vRealize-Operations-Manager/1.4/container-monitoring/GUID-BD6B5510-4A16-412D-B5AD-43F74C300C91.html)and [Release Notes](https://docs.vmware.com/en/Management-Packs-for-vRealize-Operations-Manager/1.4/rn/Container-Monitoring-Release-Notes.html) in the VMware documentation.
<% else %>
####<a id='realize'></a> cAdvisor 

cAdvisor is an open source tool for monitoring, analyzing, and exposing Kubernetes container resource usage and performance statistics.

To deploy a cAdvisor container, do the following:  

1. Select **Monitoring**.  
1. Under **Deploy cAdvisor**, select **Yes**.  
1. Click **Save**.

<p class="note"><strong>Note:</strong> For information about configuring cAdvisor to monitor your running Kubernetes containers, see 
    <a href="https://github.com/google/cadvisor#cadvisor/">cAdvisor</a> in the cAdvisor GitHub repository. 
    For general information about Kubernetes cluster monitoring, see 
    <a href="https://kubernetes.io/docs/tasks/debug-application-cluster/resource-usage-monitoring/#resource-metrics-pipeline">Tools for Monitoring Resources</a> 
    in the Kubernetes documentation.</p>
<% end %>
####<a id='metric-sinks'></a> Metric Sink Resources

You can configure <%= vars.product_short %>-provisioned clusters to send
Kubernetes node metrics and pod metrics to metric sinks.
For more information about sinks, see
[Sink Resources](in-cluster-monitoring.html#sinks) in
_Monitoring Workers and Workloads_.

To enable clusters to send Kubernetes node metrics and pod metrics to metric
sinks:

1. In **Monitoring**, select **Enable Metric Sink Resources**.
If you enable this checkbox, <%= vars.product_short %> deploys Telegraf as a
`DaemonSet`, a pod that runs on each worker node in all your Kubernetes clusters.

    <p class="note"><strong>Note:</strong> After configuring <%= vars.product_short %>, you must create your metric sinks. To create metric sinks, follow the instructions in <a href="create-sinks.html">Creating and Managing Sink Resources</a>.</p>

1. (Optional) To enable Node Exporter to send worker node metrics to metric sinks of kind `ClusterMetricSink`, select **Enable Node Exporter**.
If you enable this checkbox, <%= vars.product_short %> deploys Node Exporter as a `DaemonSet`, a pod that runs on each worker node in all your Kubernetes clusters.

    For instructions on how to create a metric sink of kind `ClusterMetricSink` for Node Exporter metrics,
    see [Create a ClusterMetricSink Resource for Node Exporter Metrics](create-sinks.html#node-exporter) in _Creating and Managing Sink Resources_.
1. Click **Save**.

####<a id='telegraf'></a> Telegraf

You can configure the Telegraf agent to collect metrics and send the metrics to a third-party monitoring service.
The Telegraf agent collects metrics from Node Exporter on master and etcd.

To connect a third-party monitoring service to <%= vars.product_short %>, do the following:

1. Create a configuration file for the third-party monitoring service. For instructions, see [Create a Configuration File](./monitor-etcd.html#toml).
1. (Optional) If you want to send metrics from Node Exporter, select **Enable Node-Exporter on master**.
1. To configure **Setup Telegraf Outputs**, enter the contents of the configuration file you created.
If you do not want to output any metrics, leave the default value `[[outputs.discard]]`.
1. Click **Save**.
<%# WARNING!!!! %>
<%# <!-- DO NOT ADD READBILITY LINE WRAPPING TO THIS CONTENT THE LONG LINES MUSt REMAIN TO CORRECTLY FORMAT THE FOLLOWING SECTION'S MARKDOWN CONTENT  %>
<%#  WARNING!!!! %>
