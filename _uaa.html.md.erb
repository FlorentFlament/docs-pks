To configure the UAA server, do the following:

1. Click **UAA**.
1. Under **PKS API Access Token Lifetime**, enter a time in seconds for the PKS API access token lifetime. This field defaults to `600`.<br>
  <img src="images/uaa.png" alt="UAA pane configuration" width="325">
1. Under **PKS API Refresh Token Lifetime**, enter a time in seconds for the PKS API refresh token lifetime. This field defaults to `21600`.
1. Under **PKS Cluster Access Token Lifetime**, enter a time in seconds for the cluster access token lifetime. This field defaults to `600`.
1. Under **PKS Cluster Refresh Token Lifetime**, enter a time in seconds for the cluster refresh token lifetime. This field defaults to `21600`.
<p class="note"><strong>Note</strong>: Pivotal recommends using the default UAA token timeout values. 
By default, access tokens expire after ten minutes and refresh tokens expire after six hours. 
If you want to customize your token timeout values, 
see <a href="https://docs.pivotal.io/pivotalcf/2-6/uaa/uaa-overview.html#tokens">Token Management</a> in <em>UAA Overview</em>.
</p>
1. Under **Configure created clusters to use UAA as the OIDC provider**, select **Enabled** or **Disabled**. If you click **Enabled**, Kubernetes verifies end-user identities based on authentication executed by UAA. For more information, see the table below.
  <table class="nice">
    <tr>
      <th>Option</th>
      <th>Description</th>
    </tr>
    <tr>
      <td>**Disabled**</td>
      <td>If you do not enable UAA as the OpenID Connect (OIDC) provider, Kubernetes authenticates users against its internal user management system.</td>
    </tr>
    <tr>
      <td>**Enabled**</td>
      <td>If you enable UAA as the OIDC provider, Kubernetes authenticates users as follows:
        <ul>
          <li>If you select <strong>Internal UAA</strong> in the next step, Kubernetes authenticates users against the internal UAA authentication mechanism.</li>
          <li>If you select <strong>LDAP Server</strong> in the next step, Kubernetes authenticates users against the LDAP server.</li>
          <li>If you select <strong>SAML Identity Provider</strong> in the next step, Kubernetes authenticates users against the SAML identity provider.</li>
        </ul>
      </td>
    </tr>
  </table>
  <p class="note"><strong>Note</strong>: When you enable UAA as the OIDC provider, existing <%= vars.product_short %>-provisioned Kubernetes clusters are upgraded to use OIDC. This invalidates your kubeconfig files. You must regenerate the files for all clusters.</p>
    To configure <%= vars.product_short %> to use UAA as the OIDC provider, do the following:

    1. Under **Configure created clusters to use UAA as the OIDC provider**, select **Enabled**.
      ![OIDC configuration checkbox](images/oidc.png)

    1. For **UAA OIDC Groups Claim**, enter the name of your groups claim. This is used to set a user's group in the JSON Web Token (JWT) claim. The default value is `roles`.

    1. For **UAA OIDC Groups Prefix**, enter a prefix for your groups claim. This prevents conflicts with existing names. For example, if you enter the prefix `oidc:`, UAA creates a group name like `oidc:developers`. If you are configuring a new <%= vars.product_short %> installation, the default is `oidc:`. If you are upgrading to <%= vars.product_short %> v1.5, the default is `-`.

    1. For **UAA OIDC Username Claim**, enter the name of your username claim. This is used to set a user's username in the JWT claim. The default value is `user_name`. Depending on your provider, admins can enter claims besides `user_name`, like `email` or `name`.

    1. For **UAA OIDC Username Prefix**, enter a prefix for your username claim. This prevents conflicts with existing names. For example, if you enter the prefix `oidc:`, UAA creates a username like `oidc:admin`. If you are configuring a new <%= vars.product_short %> installation, the default is `oidc:`. If you are upgrading to <%= vars.product_short %> v1.5, the default is `-`.
      <p class="note"><strong>Note:</strong> Pivotal recommends adding OIDC prefixes to prevent OIDC users and groups from gaining unintended cluster privileges. When you upgrade to <%= vars.product_short %> v1.5, if you do not change the values for <strong>UAA OIDC Groups Prefix</strong> or <strong> UAA OIDC Username Prefix</strong>, <%=vars.product_short %> does not add prefixes.</p>
      <p class="note warning"><strong>Warning:</strong> If you change the above values for a pre-existing <%=vars.product_short %> installation, you must change any existing role bindings that bind to a username or group. If you do not change your role bindings, developers cannot access Kubernetes clusters. For instructions about creating role bindings, see <a href="./manage-cluster-permissions.html">Managing Cluster Access and Permissions</a>.</p>
1. Select one of the following options:
  * To use an internal user account store for UAA, select **Internal UAA**.
  Click **Save** and continue to [(Optional) Monitoring](#monitoring).
  * To use LDAP for UAA, select **LDAP Server** and continue to
  [Connecting <%= vars.product_short %> to an LDAP Server](configuring-ldap.html).
  * To use SAML for UAA, select **SAML Identity Provider** and continue to
  [Connecting <%= vars.product_short %> to a SAML Identity Provider](configuring-saml.html).
