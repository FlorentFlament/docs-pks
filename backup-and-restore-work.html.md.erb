---
title: Backing Up and Restoring Tanzu Kubernetes Workloads Using Velero and Restic
owner: TKGI
---

This section describes how to back up and restore Kubernetes workloads deployed to TKGI clusters using Velero and Restic.

## <a id="valero-about"></a>About Tanzu Kubernetes Workload Backup and Restore

Tanzu Kubernetes workload backup and restore is done using [Velero](https://velero.io/) and [Restic](https://github.com/restic/restic) software. 

Velero is the only open source product to provide full backup and recovery of Kubernetes workloads. Restic is used as a [companion tool](https://velero.io/docs/v1.4/restic/) with Velero to provide platform independent volume snapshots. Together Vaero and Restic support backup and recovery for all types of Kubernetes workloads deployed to Tanzu clusters.

###<a id="app-types"></a>  Application Types

An application deployed to Kubernetes can be stateless or stateful. Velero/Restic can back up and restore both types, but the procedure may differ slightly. The examples demonstrate the differences and process for each type.

###<a id="persistence-prov"></a> Storage Types

Tanzu Kuberentes clusters support two persistence providers: VMware Cloud Provider (vCP) and the Container Storage Interface (CSI). 

vCP is VMware's Kubernetes storage plugin that allows cluster nodes on vSphere to interact with vCenter to support Kubernetes Persistent Volume objects. CSI is open source software that enables Kubernetes implementations to provide a standard interface for storage systems, without having to create drivers for each  system.

The provider is defined in the storage class. Velero with Restic backup and restore is slightly different depending on the type of persistence provider. 

##<a id="requirements"></a> Tanzu Kubernetes Workload Backup and Restore Requirements

This section lists the requirements for using Velero and Restic for Kubernetes workload backup and recovery.

###<a id="valero-cluster-req"></a> Cluster Configuration

A Velero pod and a Restic pod are installed on the Kubernetes cluster. To use Velero and Restic for Kubernetes workload backup and recovery with TKGI, you must configure each target cluster as follows:

1. Enable the `Allow Privileged` option in your plan configuration so that Restic is able to mount the hostpath.
1. Change the hostPath from `/var/lib/kubelet/pods` to `/var/vcap/data/kubelet/pods`.

###<a id="valero-objstore-req"></a> Object Store

You need to provide an object store for Velero backups. Velero supports a number of [object store providers](https://velero.io/docs/v1.4/supported-providers/). Minio is an Amazon S3 compatible object store that is easy to install and use. This documentation uses the Minio server installed on a Linux VM as a backup destination.

###<a id="valero-client-req"></a> Velero CLI

To perform Velero backup and recovery, you install the Velero CLI on a client VM. This can be the TKGI client VM or an administrator laptop.

###<a id="valero-airgap-req"></a>Air-Gapped Environment

The instructions assume that the cluster environment has internet access, including the client where the Velero CLI is installed as well as the Kuberentes  cluster. In case the environment has no internet access, follow the procedure listed in this doc: https://velero.io/docs/v1.4/on-premises/#air-gapped-deployments

###<a id="valero-version-req"></a> Velero Version

This documentation is tested with [Velero v1.4.2](https://github.com/vmware-tanzu/velero/releases/tag/v1.4.2).

##<a id="next-topic"></a> Next Topic


