---
title: Creating and Managing Compute Profiles with the CLI
owner: TKGI
---

This topic describes how <%= vars.product_full %> administrators on vSphere with NSX-T can create and delete compute profiles for Kubernetes clusters provisioned by <%= vars.product_short %>.
It also lists verified use cases for compute profiles on <%= vars.product_short %>.

For more information on how to use compute profiles, see [Using Compute Profiles](./compute-profiles-use.html).

## <a id="create"></a> Create a Compute Profile

To create a compute profile in <%= vars.product_short %>, you:

1. Define a compute profile in a JSON configuration file, following the [Compute Profile Format](#format) below.

1. Use the <%= vars.k8s_runtime_abbr %> CLI to define the compute profile within <%= vars.product_short %>, as described in [The create-compute-profile Command](#run-create), below.

### <a id="format"></a> Compute Profile Format

To create a compute profile, you must first define it as a JSON file that specifies network parameters, listed in [Compute Profile Parameters](#params) below.

Here is an example compute profile that includes all available parameters.

<p class="note"><strong>Note:</strong> This example compute profile is for illustration purposes only. It is not intended to be used as a template for compute profile definition.</p>

```
{
	"name": "example-compute-profile",
	"description": "Example Compute Profile with All Available Parameters -- FOR ILLUSTRATION PURPOSES ONLY",
	"parameters": {
		"lb_size": "large",
		"pod_ip_block_ids": [
			"ebe78a74-a5d5-4dde-ba76-9cf4067eee55",
			"ebe78a74-a5d5-4dde-ba76-9cf4067eee56" ],
		"pod_subnet_prefix": 27,
    	"pod_routable": true,
		"fip_pool_ids": [
			"e50e8f6e-1a7a-45dc-ad49-3a607baa7fa0",
			"ebe78a74-a5d5-4dde-ba76-9cf4067eee55" ],
		"t0_router_id": "5a7a82b2-37e2-4d73-9cb1-97a8329e1a90",
		"master_vms_nsgroup_id": "9b8d535a-d3b6-4735-9fd0-56305c4a5293",
		"node_ip_block_ids": [
			"2250dc43-63c8-4bb8-b8cf-c6e12ccfb7de", "3d577e5c-dcaf-4921-9458-d12b0e1318e6" ],
		"node_routable": true,
		"node_subnet_prefix": 20,
    	"nodes_dns": [
      		"8.8.8.8", "192.168.115.1", "192.168.116.1" ],		
		"dns_lookup_mode": "API_INGRESS",
		"ingress_prefix": "ingress",
		"single_tier_topology": true,
		"infrastructure_networks": [
			"30.0.0.0/24",
			"192.168.111.0/24",
			"192.168.115.1" ],
		"cni_configurations": {
			"type": "nsxt",
			"parameters": {
				"nsx_lb": false,
				"nsx_ingress_controller": true,			
				"x_forwarded_for": "insert",
				"ingress_ip": "192.168.160.212",
				"log_settings": {
					"log_level": "DEBUG",
				"ingress_persistence_settings": {
					"persistence_type": "cookie",
					"persistence_timeout": 1 },
				"max_l4_lb_service": 10,
				"l4_persistence_type": "source_ip",
        		"l4_lb_algorithm": "weighted_round_robin",
        		"top_firewall_section_marker":"section-id",
        		"bottom_firewall_section_marker":"section-id"                         
			}
		}
	}
}
```

<p class="note"><strong>WARNING:</strong> None of the parameters defined under <code>cni_configurations</code> can be updated.</p>

### <a id="params"></a> Compute Profile Parameters

The compute profile JSON can include the following top-level parameters:

Parameter 					| Type 		| Description 
----------------------------|-----------|-----------------------------
| `name` 					| String 	| Name of the compute profile. 
| `description` 			| String 	| Description of the compute profile. 
| `parameters` 				| Map 		| One or more name-value pairs. 
| `lb_size` 				| String 	| Size of the NSX-T load balancer service: `small` (default), `medium`, and `large`.
| `pod_ip_block_ids`		| String 	| Array of Pod IP Block UUIDs. 
| `pod_subnet_prefix`		| Integer 	| Size of the Pods IP Block subnet. 
| `pod_routable` 			| Boolean 	| Make routable the Pods subnet. Default is `false`. 
| `fip_pool_ids` 			| String 	| Array of floating IP pool UUIDs defined in NSX-T. 
| `t0_router_id` 			| String 	| Tenant Tier-0 Router UUID defined in NSX-T. 
| `master_vms_nsgroup_id` 	| String 	| Namespace Group UUID as defined in NSX-T. 
| `nodes_dns` 				| String 	| Array (up to 3) of DNS server IP addresses for lookup of Kubernetes nodes and pods. 
| `dns_lookup_mode` 		| String 	| DNS lookup mode for Kubernetes API load balancer (`API`) and ingress controller (`API_INGRESS`). 
| `ingress_prefix` 			| String 	| Ingress controller hostname prefix for DNS lookup. 
| `single_tier_topology` 	| Boolean 	| Use a single Tier-1 Router per cluster (shared). Default is `true`.
| `infrastructure_networks` | String 	| Array of IP addresses and subnets for Node Networks for use with a Shared Tier-1 topology in a Multi-Tier-0 environment.
| `cni_configurations`		| Map 		| Map containing key-value pairs for configuring NCP (see table below). 

The compute profile JSON accepts the following parameters for `cni_configurations`:

Parameter 							| Type 		| Description 
------------------------------------|-----------|-----------------------------
| `type` 							| String 	| Only the constant `nsxt` is accepted. 
| `parameters` 						| Map 		| One or more name-value pairs for NCP settings. 
| `x_forwarded_for` 				| String 	| Use the same source IP for calling clients. Accepts `"insert"` and `"replace"`.
| `nsx_lb`							| Boolean 	| Use NSX-T layer 4 virtual server for each Kubernetes service of type LoadBalancer. Default is `true`.
| `nsx_ingress_controller` 			| Boolean 	| Use NSX-T layer 7 virtual server as the ingress controller for the Kubernetes cluster. Default is `true`.
| `ingress_ip`						| String 	| IP address to use for the ingress controller. 
| `log_settings` 					| Map 		| Parameters for configuring NCP logging. 
| `log_level` 						| String 	| Accepted values: "INFO", "WARNING", "DEBUG", "ERROR", and "CRITICAL". 
| `log_dropped_traffic` 			| Boolean 	| Log dropped firewall traffic. Default is `false`. 
| `ingress_persistence_settings`	| String 	| Parameters for customizing Layer 7 persistence. 
| `persistence_type` 				| String 	| Specify the ingress persistence type: `none`, `cookie`, or `source_ip`.
| `persistence_timeout` 			| Integer 	| Persistence timeout interval in seconds. 
| `max_l4_lb_service` 				| Integer 	| Limit the maximum number of layer 4 virtual servers per cluster. Minimum is `1`.
| `l4_persistence_type`				| String 	| Connection stickiness based on `source_ip`. 
| `l4_lb_algorithm`					| String 	| Layer 4 load balancer behavior: `round_robin` (default), `least_connection`, `ip_hash`, `weighted_round_robin`. 
| `top_firewall_section_marker`		| String 	| UUID of the top `section-id` for the distributed firewall (DFW) section as defined in NSX-T. 
| `bottom_firewall_section_marker`	| String 	| UUID of the bottom `section-id` for the distributed firewall (DFW) section as defined in NSX-T. 

### <a id="run-create"></a> The create-compute-profile Command

After a compute profile is defined in a JSON file as described in [Compute Profile Format](#format),
an <%= vars.product_short %> administrator can create the compute profile by running the following <%= vars.k8s_runtime_abbr %> CLI command:

```
tkgi create-compute-profile PATH-TO-YOUR-COMPUTE-PROFILE-CONFIGURATION
``` 
Where `PATH-TO-YOUR-COMPUTE-PROFILE-CONFIGURATION` is the path to the JSON file
you created when defining the compute profile.

For example:

<pre class="terminal">
$ tkgi create-compute-profile np-routable-pods.json

Compute profile small-routable-pod successfully created
</pre>

Only cluster administrators, `pks.clusters.admin`, can create compute profiles.
If a cluster manager, `pks.clusters.manage`, attempts to create a compute profile, the following error occurs:

```
You do not have enough privileges to perform this action. Please contact the <%= vars.k8s_runtime_abbr %> administrator.
```

After an administrator creates a compute profile, cluster managers can create clusters with it or assign it to existing clusters.
For more information, see the [Using Compute Profiles](./compute-profiles-use.html) topic.

## <a id="manage"></a> Manage Compute Profiles

<%= vars.product_short %> administrators can delete compute profiles.
Administrators can also perform the same operations that cluster managers use to list compute profiles and manage how clusters use them.

### <a id="delete"></a> Delete a Compute Profile

To delete a compute profile, run the following command:

```
tkgi delete-compute-profile COMPUTE-PROFILE-NAME
```

Where `COMPUTE-PROFILE-NAME` is the name of the compute profile you want to delete.

<p class="note"><strong>Note:</strong> You cannot delete a compute profile that is in use.</p>

Only cluster administrators, `pks.clusters.admin`, can delete compute profiles.
If a cluster manager, `pks.clusters.manage`, attempts to delete a compute profile,
the following error occurs:

```
You do not have enough privileges to perform this action. Please contact the <%= vars.k8s_runtime_abbr %> administrator.
```

### <a id="user-ops"></a> Cluster Manager Operations

The following sections link to operations that both <%= vars.product_short %> administrators and cluster managers can perform on compute profiles,
documented in the [Using Compute Profiles (NSX-T Only)](compute-profiles-use.html) topic.

* [List Compute Profiles](compute-profiles-use.html#list-profiles) 
* [Create a Cluster with a Compute Profile](compute-profiles-use.html#create)
* [Assign a Compute Profile to an Existing Cluster](compute-profiles-use.html#assign)
  - This operation can assign a compute profile to a cluster that does not have one, or change a cluster's existing profile.
  - You cannot change a cluster's compute profile to remove pod IP block IDs.
	For details, see [Limitation: Pod IP Block Changes](#change-pod-ips)]

### <a id="change-pod-ips"></a> Limitation: Pod IP Block Changes

You cannot remove a cluster's pod IP block IDs by creating and assigning a new compute profile with `pod_ip_block_ids` array values removed.

You only can change the `pod_ip_block_ids` field as follows:

- Reorder the IP Block IDs in the array
- Add more IP Block IDs in the array

To update the `pod_ip_block_ids` compute profile field for a cluster, do the following:

1. Define a new compute profile. In the `pod_ip_block_ids` field, reorder the IP Block IDs or add additional IP Block IDs.
For more information on defining the compute profile JSON file, see [Defining Compute Profiles](./compute-profiles-manage.html).

    <p class="note"><strong>Note:</strong> If possible, start with the exact contents of the original compute profile and update the <code>pod_ip_block_ids</code> field, as well as the <code>name</code> field. If it is not possible to obtain the original compute profile, create a new compute profile with a unique <code>name</code> and the original values in the <code>pod_ip_block_ids</code> field. Then reorder or add IPs as desired.</p>

For more information on the `pod_ip_block_ids` field, see [Compute Profile Parameters](./compute-profiles-manage.html#params). 
For more information on the supported use cases for the `pod_ip_block_ids` field, see [Compute Profile Use Cases](./compute-profiles-manage.html#use-cases).

## <a id='use-cases'></a> Compute Profile Use Cases

Compute profiles let you customize NSX-T configuration parameters at the time of cluster creation. Use cases for compute profiles include:

<%= partial 'compute-profiles-uses' %>
