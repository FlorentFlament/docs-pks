---
title: Creating and Managing Compute Profiles with the CLI
owner: TKGI
---

This topic describes how to create and manage compute profiles in
<%= vars.product_short %> (<%= vars.k8s_runtime_abbr %>) on vSphere.

For more information on how to use compute profiles, see
[Using Compute Profiles](./compute-profiles-use.html).

## <a id='about'></a>About Compute Profiles

A compute profile enables <%= vars.k8s_runtime_abbr %> admins to override the default settings defined by a plan. 

Using a compute profile, you can customize the following:

* Compute resources such as CPU, memory, ephemeral disk, and persistent disk for Kubernetes clusters
* Where Kubernetes clusters are created within your vSphere infrastructure and which vSphere resources are used 

After you create a compute profile, you can apply it to one or more Kubernetes clusters.

## <a id="create"></a> Create a Compute Profile

To create a compute profile in <%= vars.k8s_runtime_abbr %>, you:

1. Define a compute profile in a JSON configuration file by
following the [Compute Profile Format](#format) below.

1. Use the <%= vars.k8s_runtime_abbr %> CLI to define the compute profile
within <%= vars.k8s_runtime_abbr %>. For instructions, see
[The create-compute-profile Command](#run-create) below.

### <a id="format"></a> Compute Profile Format

To create a compute profile, you must first define it as a JSON file that
specifies compute parameters, which are listed in
[Compute Profile Parameters](#params) below.

Below is an example compute profile.

<p class="note"><strong>Note:</strong> This example compute profile is for
illustration purposes only. It is not intended to be used as a template for
compute profile definition.</p>

```
{
  "name": "dc-east-mixed",
  "description": "A profile for the east datacenter with heterogeneous workers.",
  "parameters": {
    "azs": [{
      "name": "east",
      "cpi": "056bf5a3aea9c5c79f62",
      "cloud_properties": {
        "datacenters": [{
          "name": "east",
          "clusters": [{
            "cluster-0": {
              "host_group": {
                "drs_rule": "MUST",
                "name": "cluster-0-hg"
              }
            },
            "resource_pool": "az-2"
          }]
        }]
      }
    }],
    "cluster_customization": {
      "control_plane": {
        "cpu": 4,
        "memory_in_mb": 16384,
        "ephemeral_disk_in_mb": 32768,
        "az_names": ["east"],
        "instances": 3
      },
      "node_pools": [{
          "name": "x-large",
          "cpu": 4,
          "memory_in_mb": 8192,
          "ephemeral_disk_in_mb": 32768,
          "az_names": ["east"],
          "instances": 3,
          "max_worker_instances": 25
        },
        {
          "name": "small",
          "cpu": 1,
          "memory_in_mb": 2048,
          "ephemeral_disk_in_mb": 8192,
          "az_names": ["east"],
          "instances": 5,
          "max_worker_instances": 30
        }
      ]
    }
  }
}
```

### <a id="params"></a> Compute Profile Parameters

The compute profile JSON configuration file can include the following top-level
properties:

<table>
  <tr>
    <th width="30%">Property</th>
    <th>Type</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>name</code></td>
    <td>String</td>
    <td>Name of the compute profile. You use this name when managing the
    compute profile or assigning the profile to a Kubernetes cluster through
    the TKGI CLI.</td>
  </tr>
  <tr>
    <td><code>description</code></td>
    <td>String</td>
    <td>Description of the compute profile.</td>
  </tr>
  <tr>
    <td><code>parameters</code></td>
    <td>Object</td>
    <td>Set of properties defining the main body of the compute profile
    such as <code>azs</code> and <code>cluster_customization</code>.</td>
  </tr>
  <tr>
    <td><code>azs</code></td>
    <td>Array</td>
    <td>Properties defining AZ name, CPI, and <code>cloud_properties</code> settings.
    See <a href="#cloud-properties">azs Block</a> below.</td>
  </tr>
  <tr>
    <td><code>cluster_customization</code></td>
    <td>Object</td>
    <td>Properties defining <a href="#control-plane"><code>control_plane</code></a> and <a href="#node-pools"><code>node_pools</code></a>.</td>
  </tr>
</table>

#### <a id="cloud-properties"></a>`azs` Block

<table>
  <tr>
    <th width="28%">Property</th>
    <th>Type</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>name</code></td>
    <td>String</td>
    <td>Name for the AZ where you want to deploy cluster VMs. For example,
      <code>z1</code>.</td>
  </tr>
  <tr>
    <td><code>cpi</code></td>
    <td></td>
    <td>BOSH CPI ID of your <%= vars.product_short %> deployment. For instructions on how to obtain the ID, see <a href="#retrieve-cpi-id">Retrieve the BOSH CPI ID</a>. For example,
      <code>abc012abc345abc567de</code>.</td>
  </tr>
  <tr>
    <td><code>cloud_properties</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>datacenters</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>name</code></td>
    <td></td>
    <td>Name of your datacenter as it appears in Ops Manager and your cloud provider console. For example, <code>dc-east</code>.</td>
  </tr>
  <tr>
    <td><code>clusters</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>cluster-0</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>host_group</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>drs_rule</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>name</code></td>
    <td></td>
    <td></td>
  </tr>
  <tr>
    <td><code>resource_pool</code></td>
    <td></td>
    <td>Name of the resource pool where you want to deploy your cluster.</td>
  </tr>
</table>

#### <a id="control-plane"></a>`control_plane` Block

This block defines properties for Kubernetes control plane node instances.

When defining the `control_plane` block,
you must specify either `cpu`, `memory_in_mb`,
`ephemeral_disk_in_mb` or none of the three.

<table>
  <tr>
    <th width="30%">Property</th>
    <th>Type</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>cpu</code></td>
    <td>Integer</td>
    <td>CPU count for control plane instances.</td>
  </tr>
  <tr>
    <td><code>memory_in_mb</code></td>
    <td>Integer</td>
    <td>RAM for control plane instances.</td>
  </tr>
  <tr>
    <td><code>ephemeral_disk_in_mb</code></td>
    <td>Integer</td>
    <td>Ephemeral disk for control plane instances.</td>
  </tr>
  <tr>
    <td><code>az_names</code></td>
    <td>Array</td>
    <td>AZs in which you want control plane instances to run.</td>
  </tr>
  <tr>
    <td><code>instances</code></td>
    <td>Integer</td>
    <td>Number of control plane instances.</td>
  </tr>
</table>

Do not assign the `name` property to this block.

#### <a id="node-pools"></a>`node_pools` Block

This block defines properties for Kubernetes worker nodes.
You can define one or more node pools.

When defining the `node_pools` block,
you must specify either `cpu`, `memory_in_mb`,
`ephemeral_disk_in_mb` or none of the three.

<table>
  <tr>
    <th width="30%">Property</th>
    <th>Type</th>
    <th>Description</th>
  </tr>
  <tr>
    <td><code>name</code></td>
    <td>String</td>
    <td>Name of the node pool.</td>
  </tr>
  <tr>
    <td><code>cpu</code></td>
    <td>Integer</td>
    <td>CPU count for worker node instances.</td>
  </tr>
  <tr>
    <td><code>memory_in_mb</code></td>
    <td>Integer</td>
    <td>RAM for worker node instances.</td>
  </tr>
  <tr>
    <td><code>ephemeral_disk_in_mb</code></td>
    <td>Integer</td>
    <td>Ephemeral disk for worker node instances.</td>
  </tr>
  <tr>
    <td><code>az_names</code></td>
    <td>Array</td>
    <td>AZs in which you want worker node instances to run.</td>
  </tr>
  <tr>
    <td><code>instances</code></td>
    <td>Integer</td>
    <td>Number of worker node instances.</td>
  </tr>
  <tr>
    <td><code>max_worker_instances</code></td>
    <td>Integer</td>
    <td>Maximum number of worker node instances for the node pool.</td>
  </tr>
</table>


### <a id='examples'></a> Compute Profile Examples

See the table below for examples of compute profiles.

Example                                   | Description
----------------------------------------------------------------|------------------------------------------------------------------------------
[Flexible Node Types](#flexible-types)        | Define compute resources.
[Heterogeneous Nodes](#heterogeneous-nodes)       | TK one-line description
[Custom AZs for Nodes](#custom-azs)       | Define AZs.

### <a id='flexible-types'></a> Flexible Node Types

TK Recipe.

### <a id='heterogeneous-nodes'></a> Heterogeneous Nodes

TK Recipe.

### <a id='custom-azs'></a> Custom AZs for Nodes

You can define Availability Zones (AZs) dynamically instead of adding new AZs in the BOSH Director tile. As a result, you do not need to make AZ changes to each plan and the overall impact to the TKGI control plane is smaller.

TK Recipe.

### <a id="run-create"></a> The create-compute-profile Command

After a compute profile is defined in a JSON file as described in [Compute Profile Format](#format),
an <%= vars.k8s_runtime_abbr %> administrator can create the compute profile by running the following <%= vars.k8s_runtime_abbr %> CLI command:

```
tkgi create-compute-profile PATH-TO-YOUR-COMPUTE-PROFILE-CONFIGURATION
```
Where `PATH-TO-YOUR-COMPUTE-PROFILE-CONFIGURATION` is the path to the JSON file
you created when defining the compute profile.

For example:

<pre class="terminal">
$ tkgi create-compute-profile large-workers.json

Compute profile large-workers successfully created
</pre>

Only cluster administrators, `pks.clusters.admin`, can create compute profiles.
If a cluster manager `pks.clusters.manage` or read-only admin `pks.clusters.admin-read-only` attempts to create a compute profile, the following error occurs:

```
You do not have enough privileges to perform this action. Please contact the <%= vars.k8s_runtime_abbr %> administrator.
```

After an administrator creates a compute profile, cluster managers can create clusters with it or assign it to existing clusters.
For more information, see the [Using Compute Profiles](./compute-profiles-use.html) topic.

## <a id="manage"></a> Manage Compute Profiles

<%= vars.k8s_runtime_abbr %> administrators can delete compute profiles.
Administrators can also perform the same operations that cluster managers use to list compute profiles and manage how clusters use them.

<p class="note warning"><strong>Warning:</strong> These commands do not work for compute profiles created using the <%= vars.k8s_runtime_abbr %> API in <%= vars.k8s_runtime_abbr %> v1.8 or earlier.</p>


### <a id="view"></a> View a Compute Profile

To view details about a compute profile, run the following command:

```
tkgi compute-profile COMPUTE-PROFILE-NAME
```

Where `COMPUTE-PROFILE-NAME` is the name of the compute profile you want to
view.

For example:

<pre class="terminal">
tkgi compute-profile test-compute-profile

Name:         test-compute-profile
Description:  test-compute-profile
Parameters:
  Cluster Customization:
    Control Plane:
      Name:
      Instances:            3
      CPU:                  2
      Memory (Mb):          4096
      Ephemeral Disk (Mb):  16384
    Node:
      Name:                 tiny-1
      Instances:            5
      CPU:                  2
      Memory (Mb):          4096
      Ephemeral Disk (Mb):  16384
    Node:
      Name:                 medium-2
      Instances:            1
      CPU:                  4
      Memory (Mb):          4096
      Ephemeral Disk (Mb):  32768
</pre>

### <a id="delete"></a> Delete a Compute Profile

To delete a compute profile, run the following command:

```
tkgi delete-compute-profile COMPUTE-PROFILE-NAME
```

Where `COMPUTE-PROFILE-NAME` is the name of the compute profile you want to delete.

For example:
<pre class="terminal">
tkgi delete-compute-profile test-compute-profile-8

Are you sure you want to delete the compute profile test-compute-profile-8? (y/n): y
Deletion of test-compute-profile-8 completed
</pre>

Limitations:

- You cannot delete a compute profile that is in use.
The profile must be disassociated from all clusters, or all associated clusters must be deleted.

- Only cluster administrators, `pks.clusters.admin`, can delete compute profiles.
If a cluster manager `pks.clusters.manage` or read-only admin `pks.clusters.admin-read-only` attempts to delete a compute profile, the following error occurs:

	```
	You do not have enough privileges to perform this action. Please contact the <%= vars.k8s_runtime_abbr %> administrator.
	```

### <a id="user-ops"></a> Cluster Manager Operations

The following sections link to operations that both <%= vars.k8s_runtime_abbr %> administrators and cluster managers can perform on compute profiles,
documented in the [Using Compute Profiles (NSX-T Only)](compute-profiles-use.html) topic.

* [List Compute Profiles](compute-profiles-use.html#list-profiles)
* [Create a Cluster with a Compute Profile](compute-profiles-use.html#create)
* [Assign a Compute Profile to an Existing Cluster](compute-profiles-use.html#assign)
  - This operation can assign a compute profile to a cluster that does not have one, or change a cluster's existing profile.
  - You cannot change a cluster's compute profile to move its nodes to different Availability Zones.

## <a id="vs-plans"></a> Compute Profiles vs. Plans

As with plans defined in <%= vars.k8s_runtime_abbr %> tile **Plans** panes,
compute profiles let <%= vars.k8s_runtime_abbr %> admins define cluster resource choices for developers using Kubernetes.

Compute profiles offer more granular control over cluster topology and node sizing than plans do.
For example, compute profiles can define heterogenous clusters with different
CPU, memory, ephemeral disk, or persistent disk settings for master nodes and worker nodes.

You can also apply a compute profile to specific clusters, overriding the default settings defined by their plan and possibly avoiding the need to create new plans.

You use the <%= vars.k8s_runtime_abbr %> tile to manage plans
and the <%= vars.k8s_runtime_abbr %> CLI to manage compute profiles.
