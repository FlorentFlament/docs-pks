---
title: Using Helm with Enterprise PKS
owner: PKS
---

This topic describes how to use the package manager [Helm 3](https://helm.sh/)
or its predecessor [Helm 2](https://v2.helm.sh/) for your
Kubernetes apps running on <%= vars.product_full %>.

Helm 3 requires less configuration than Helm 2.

##<a id='overview'></a> Overview

Helm 3 and Helm 2 include the following components:

<table>
  <tr>
    <th>Component</th>
    <th>Role</th>
    <th>Location</th>
  </tr>
  <tr>
    <td><code>helm</code></td>
    <td>Client</td>
    <td>Runs on your local workstation</td>
  </tr>
  <tr>
    <td><code>tiller</code> (Helm 2 only)</td>
    <td>Server</td>
    <td>Runs inside your Kubernetes cluster</td>
  </tr>
</table>

Helm packages are called **charts**. For more information, see
[Charts](https://docs.helm.sh/developing_charts/) in the Helm documentation.

Examples of charts:

* [Concourse](https://github.com/kubernetes/charts/tree/master/stable/concourse) for CI/CD pipelines
* [Datadog](https://github.com/kubernetes/charts/tree/master/stable/datadog) for monitoring
* [MySQL](https://github.com/kubernetes/charts/tree/master/stable/mysql) for storage

For more charts, see the [Helm Charts repository](https://github.com/kubernetes/charts) on GitHub.

##<a id='helm-3'></a> Install and Configure Helm 3

To install and configure Helm 3, follow the [Step 1: Install And Configure Helm](
https://docs.bitnami.com/kubernetes/get-started-charts-pks/#step-1-install-and-configure-helm) instructions in the Bitnami PKS documentation.

##<a id='helm-2'></a> Install and Configure Helm 2

To use Helm 2 with <%= vars.product_short %>, you must first configure the Tiller component to give it access to the Kubernetes API.
Tiller runs inside the Kubernetes cluster.

To grant API access to Tiller and install Helm 2: 

1. Create a role-based access control (RBAC) configuration file named `rbac-config.yaml` that contains the following:

    ```yaml
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: tiller
      namespace: kube-system
    ---
    apiVersion: rbac.authorization.k8s.io/v1beta1
    kind: ClusterRoleBinding
    metadata:
      name: tiller
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: cluster-admin
    subjects:
      - kind: ServiceAccount
        name: tiller
        namespace: kube-system
    ```
    
1. Create the service account and role by running the following command:
  
    ```
    kubectl create -f rbac-config.yaml
    ```

1. Download and install the latest v2 patch release of the [Helm CLI](https://github.com/kubernetes/helm/releases).

1. Deploy Helm 2 using the service account by running the following command:
    
    ```
    helm init --service-account tiller
    ```

1. Verify that the permissions are configured by running the following command: 
      
    ```
    helm ls
    ``` 
    There should be no output from the above command.

To apply more granular permissions to the Tiller service account, see the [Helm RBAC](https://github.com/kubernetes/helm/blob/master/docs/rbac.md) documentation.

For more information about securing Helm 2, see the Bitnami article [Exploring the Security of Helm](https://engineering.bitnami.com/articles/helm-security.html).
