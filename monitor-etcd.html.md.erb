---
title: Configuring Telegraf in Enterprise PKS
owner: PKS
---

This topic describes how to configure Telegraf in
<%= vars.product_full %> (<%= vars.product_short %>).

## <a id="overview"></a>Overview

You can configure Telegraf to collect metrics from master node and worker
node VMs and send the metrics to a monitoring service,
such as Wavefront or Datadog.

For more information about these metrics, see
[Metrics: Telegraf](host-monitoring.html#telegraf) in
_Monitoring <%= vars.product_short %> and
<%= vars.k8s_runtime_abbr %>-Provisioned Clusters_.

## <a id="collect"></a>Collect Metrics Using Telegraf

To collect metrics using Telegraf:

1. Create a configuration file for your output plugin.
See [Create a Configuration File](#toml) below.
1. Configure Telegraf in the <%= vars.product_tile %> tile.
See [Configure Telegraf in the Tile](#connect) below. 

### <a id="toml"></a> Create a Configuration File 

To connect a monitoring service to <%= vars.product_short %>, you must create a configuration file for the service. The configuration file is written in a TOML format and consists of key-value pairs. After you create your configuration file, you can enter the file into the <%= vars.product_tile %> tile to connect the service. 

To create a configuration file for your monitoring service:

1. Locate the required format for your monitoring service in the `README.md` file for your service in [telegraf](https://github.com/influxdata/telegraf/tree/1.11.0/plugins/outputs) in GitHub.
For example, if you want to collect metrics from etcd, the etcd documentation recommends using the open-source Prometheus monitoring service.

1. Create your configuration file using the required format of your monitoring service.
For example, if you want to create a configuration file for an HTTP output plugin, create a file similar to the following: 

    ```
    [[outputs.http]]
       url="https://example.com"
       method="POST"
       data_format="json"
    [[processors.override]]
      [processors.override.tags]
        director = "bosh-director-1"
    ```
    <p class="note"><strong>Note:</strong>  You can add tags to your configuration file to label etcd metrics. For example, the above code snippet adds a <code>bosh-director-1</code> tag to the etcd metrics. If you have multiple BOSH Directors, Pivotal recommends adding tags to filter your metrics in your monitoring service. </p>

### <a id="connect"></a> Configure Telegraf in the Tile

To configure <%= vars.product_short %> to use Telegraf for metric collection:

1. Navigate to the **<%= vars.product_tile %>** tile > **Settings** > **Host Monitoring**.
1. Select one or more of the following checkboxes:
  * **Include etcd metrics**: This includes etcd server and debug metrics.
  * **Enable node exporter on master**: This enables Node Exporter on _localhost_ of each master node VM.
  * **Include kubelet metrics**: This includes all workload metrics across your Kubernetes clusters. Enabling **Include kubelet metrics** generates a high volume of metrics.
1. In **Setup Telegraf Outputs**, replace the default value `[[outputs.discard]]` with the contents
of the configuration file that you created in [Create a Configuration File](#toml) above.
1. Click **Save**.

1. To deploy the <%= vars.product_tile %> tile, return to the Ops Manager
Installation Dashboard and click **Review Pending Changes** >
**Apply Changes**.

## <a id="errors"></a>Troubleshoot etcd

Pivotal recommends working with Pivotal or VMware Support to troubleshoot
master/etcd node VMs.
The monitoring and metrics data you retrieve from the master/etcd node VMs
can help the Support team diagnose and troubleshoot errors.
