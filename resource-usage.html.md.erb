---
title: Managing Resource Usage
owner: PKS
---

<strong><%= modified_date %></strong>

This topic describes how to manage and monitor resource utilization using the Pivotal Container Service Application Interface (PKS API).  

As <%= vars.product_short %> administrator you can set a maximum limit on each user's total VM resource allocation.  

PKS API quota commands provide a way for you to restrict a user's total allocated VM memory size and CPU count. 
Using the PKS API you can create rules, review rules and review users' current total utilization.  

<%= partial 'beta-component' %>

## <a id='quota-admin'></a> Manage Quota Limitations

To enforce a quota on a specific user, run the following command:

```
curl -k -H "Authorization: Bearer AUTH-TOKEN" \
-H "Content-Type: application/json" \
-d \
'{ \
    "owner": "USER-ID", \
    "limit": { \
      "cpu": MAX-CPU, \
      "memory": MAX-MEM \
      } \
    }' \
https://API:9021/v1beta1/quotas
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `USER-ID` is user account ID to enforce the quota restriction on.  
* `MAX-CPU` is the maximum total number of vCPUs the user is allowed to allocate to VM instances.  
* `MAX-MEM` is the maximum total amount of memory, in gigabytes, the user is allowed to allocate to VM instances.  
* `API` is your PKS API instance address.  

To modify a specific user's existing quota, run the following command:

```
curl -k -X PATCH -H "Authorization: Bearer AUTH-TOKEN" \
-H "Content-Type: application/json" \
-d \
'{ \
    "owner": "USER-ID", \
    "limit": { \
      "cpu": MAX-CPU, \
      "memory": MAX-MEM \
      } \
    }' \
https://API:9021/v1beta1/quotas/USER-ID
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `USER-ID` is user account ID to enforce the quota restriction on.  
* `MAX-CPU` is the maximum total number of vCPUs the user is allowed to allocate to VM instances.  
* `MAX-MEM` is the maximum total amount of memory, in gigabytes, the user is allowed to allocate to VM instances.  
* `API` is your PKS API instance address.  

For example:
<pre class="terminal">
$ user=exampleuser
$ curl -v -k -X PATCH -H "Authorization: Bearer $token" \
-H "Content-Type: application/json" -d \
'{ \
    "owner": "cody",  \
    "limit": {  \
        "cpu": 4,  \
        "memory": 5 \
    }  \
}' https&#58;//example.com&#58;9021/v1beta1/quotas/$user
</pre>

To delete a specific user's existing quota, run the following command:

```
curl -k -X DELETE -H "Authorization: Bearer AUTH-TOKEN" \
https://API:9021/v1beta1/quotas/USER-ID
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `API` is your PKS API instance address.  
* `USER-ID` is user account ID to enforce the quota restriction on.  

For example:
<pre class="terminal">
$ user=exampleuser
$ curl -k -X DELETE -H "Authorization: Bearer $token" https&#58;//example.com&#58;9021/v1beta1/quotas/$user
$ curl -k -X DELETE -H "Authorization: Bearer $token" https&#58;//example.com&#58;9021/v1beta1/quotas/$user
{
  "body":"The quota owner named: \"exampleuser\" not found."
}
</pre>

## <a id='quota-view-admin'></a> View Quotas

The PKS API `quotas` command reports resource utilization quotas as JSON.

To to list the resource quota restrictions currently applied to a single user, run the following command:

```
curl -k -H "Authorization: Bearer AUTH-TOKEN" \
https://API:9021/v1beta1/quotas/USER-ID
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `API` is your PKS API instance address.  
* `USER-ID` is the account ID to report on.  

For example:
<pre class="terminal">
$ user=exampleuser
$ curl -v -k -H "Authorization: Bearer $token" \
https&#58;//example.com&#58;9021/v1beta1/quotas/$user 
{
  "owner":"cody",
  "limit":{
      "cpu":2,
      "memory":1.0
  }
}
</pre>


To to list all current resource quota restrictions, run the following command:

```
curl -k -H "Authorization: Bearer AUTH-TOKEN" \
https://API:9021/v1beta1/quotas
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `API` is your PKS API instance address.  

For example:
<pre class="terminal">
$ user=exampleuser
$ curl -v -k -H "Authorization: Bearer $token" \
https&#58;//example.com&#58;9021/v1beta1/quotas
[
  {
    "owner":"cody",
    "limit":{
        "cpu":2,
        "memory":1.0
    }
  }
]
</pre>  

## <a id='utilization-view-admin'></a> View Usage

The PKS API `usages` command reports resource utilization as JSON.

To list the current resource utilization for a single user, run the following command:

```
curl -k -H "Authorization: Bearer AUTH-TOKEN" https://API:9021/v1beta1/usages/USER-ID
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `API` is your PKS API instance address.  
* `USER-ID` is your user account ID.  

To list the current resource utilization for all users, run the following command:

```
curl -k -H "Authorization: Bearer AUTH-TOKEN" \
https://API:9021/v1beta1/usages
```

Where:  
* `AUTH-TOKEN` is your authentication token.  
* `API` is your PKS API instance address.  
* `USER-ID` is your user account ID.  
