---
title: Resource Usage
owner: PKS
---

<strong><%= modified_date %></strong>

This topic describes how to manage and monitor resource utilization using the Pivotal Container Service Application Interface (PKS API).
Using the PKS API you can apply a maximum resource utilization rule to a specific user account.
You can also review the resource utilization limits currently applied to your environment's users, and as well as the users' current resource utilization. 

Individual users can use the PKS API to review their their individual resource utilization footprint and their resource utilization restrictions. 

## <a id='managing-admin'></a> Administrator: Managing Quota Limitations and Usage

As PKS administrator you can limit the total resource allocation of the VM instances a user creates. 
You can create rules, review rules and review the current utilization of users assigned to those rules by using the PKS API. 
The PKS API's quota commands support restricting a user's total allocated VM instance CPU count and memory size.

The PKS API's quota command returns a JSON string listing the individual user limitations you've applied to user accounts.
The PKS API's usage command returns a JSON string listing the individual user total allocated VM cpu count and memory size.
    
<%= partial 'beta-component' %>

## <a id='quota-admin'></a> Administrator: Managing Quota Limitations

1. To enforce a quota on a specific user run the following command:

    ```
    curl -k \
    -H "Authorization: Bearer AUTH-TOKEN" \
    -H "Content-Type: application/json" \
    -d \
    "{
        \"owner\": \"USER-ID\",
        \"limit\": {
          \"cpu\": MAX-CPU,
          \"memory\": MAX-MEM
        }
      }" \
    https://localhost:9021/HOSTNAME/quotas
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is user account id to enforce the quota restriction on.
    * `MAX-CPU` is the maximum total number of CPUs the user is allowed to allocate to VM instances
    * `MAX-MEM` is the maximum total amount of memory the user is allowed to allocate to VM instances

1. To modify a specific user's existing quota run the following command:

    ```
    curl -k -X PATCH \
    -H "Authorization: Bearer AUTH-TOKEN" \
    -H "Content-Type: application/json" \
    -d \
    "{
      \"owner\": \"USER-ID\",
      \"limit\": {
        \"cpu\": MAX-CPU,
        \"memory\": MAX-MEM
      }
    " \
    https://localhost:9021/HOSTNAME/quotas/USER-ID
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is user account id to enforce the quota restriction on.
    * `MAX-CPU` is the maximum total number of CPUs the user is allowed to allocate to VM instances
    * `MAX-MEM` is the maximum total amount of memory the user is allowed to allocate to VM instances

1. To delete a specific user's existing quota run the following command:

    ```
    curl -k -X DELETE \
    -H "Authorization: Bearer AUTH-TOKEN" \
    https://localhost:9021/HOSTNAME/quotas/USER-ID
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is user account id to enforce the quota restriction on.

1. To to list the resource quota restrictions currently applied to a single user run the following command:

    ```
    curl -k \
    -H "Authorization: Bearer AUTH-TOKEN" \
    https://localhost:9021/HOSTNAME/quotas/USER-ID
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is the account id to report on.    

1. To to list all current resource quota restrictions run the following command:

    ```
    curl -k \
    -H "Authorization: Bearer AUTH-TOKEN" \
    https://localhost:9021/HOSTNAME/quotas
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.

## <a id='utilization-admin'></a> Administrator: Monitoring Usage

1. To list the current resource utilization for a single user run the following command:

    ```
    curl -k -H "Authorization: Bearer AUTH-TOKEN" https://localhost:9021/HOSTNAME/usages/USER-ID
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is your user account id.

1. To list the current resource utilization for all users run the following command:

    ```
    curl -k -H "Authorization: Bearer AUTH-TOKEN" https://localhost:9021/HOSTNAME/usages
    ```

    Where:
    * `AUTH-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is your user account id.



## <a id='quota-dev'></a> Developer: Understanding Your Quota Limitations and Usage

Your PKS administrator might configure your PKS environment to limit the total size of the VM instances you are permitted to create. 
The administrator can restrict total instance CPU and storage sizes. This quota limitation is a limit on the total allocated size of the VM instances 
you create, not their actual utilization. You can determine the size limitations your administrator has assigned to you, and your 
current usage, by using the PKS API quotas and usages commands. 

The quotas and usages commands return a JSON string with with either your limitations or usage of cpu and memory.
    
<%= partial 'beta-component' %>

1. To obtain your resource quota run the following command:

    ```
    curl -k -H "Authorization: Bearer USER-TOKEN" https://localhost:9021/HOSTNAME/quotas/USER-ID
    ```

    Where:
    * `USER-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is your user account id.


1. To obtain your current resource utilization run the following command:

    ```
    curl -k -H "Authorization: Bearer USER-TOKEN" https://localhost:9021/HOSTNAME/usages/USER-ID
    ```

    Where:
    * `USER-TOKEN` is your authentication token.
    * `HOSTNAME` is your API Hostname.
    * `USER-ID` is your user account id.
