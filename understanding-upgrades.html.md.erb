---
title: What Happens During Enterprise PKS Upgrades
owner: PKS
---

This topic explains what happens during <%= vars.product_full %> upgrades.

## <a id="introduction"></a>Introduction

During an <%= vars.product_tile %> tile upgrade the version of <%= vars.product_short %> 
installed on your control plane VMs and Kubernetes clusters is upgraded to the new <%= vars.product_short %> version.   

By default an <%= vars.product_short %> upgrade modifies the PKS version of the <%= vars.product_tile %>
tile, <%= vars.product_short %> control plane VMs and all <%= vars.product_short %>-provisioned Kubernetes clusters. 
You can optionally upgrade only the <%= vars.product_tile %>
tile and control plane VMs, and separately upgrade your <%= vars.product_short %>-provisioned Kubernetes
clusters at a later date.  

<%= vars.product_short %> upgrading automatically migrates your configuration settings into the new tile version.

For information about upgrading <%= vars.product_short %>, see [Upgrading <%= vars.product_short %>](upgrade-pks.html). 
For information about upgrading <%= vars.product_short %> Kubernetes clusters, see [Upgrading Clusters](upgrade-clusters.html).  

## <a id="upgrade-all"></a><%= vars.product_tile %> Tile and Kubernetes Cluster Upgrades

Upgrading the <%= vars.product_tile %> tile using default settings results in upgrading
the <%= vars.product_tile %> tile and <%= vars.product_short %>-provisioned clusters. 
For more information see:

* [Upgrade the <%= vars.product_tile %> Tile](#upgrade-tile)  
* [Upgrade the <%= vars.product_tile %>-Provisioned Kubernetes Clusters](#upgrade-clusters)

To upgrade the <%= vars.product_tile %> tile only,
you must set the **Upgrade all clusters errand** to **Off** before you begin the upgrade.
For more information, see [Upgrade the PKS Tile](upgrade-pks.html#upgrade-tile) in _Upgrading <%= vars.product_short %>_.  

  <p class="note"><strong>Note</strong>: When <%= vars.product_short %> is set to upgrade both the <%= vars.product_tile %> tile
  and <%= vars.product_short %>-provisioned clusters, updating the <%= vars.product_tile %> tile with a new Linux or Windows stemcell rolls every Linux or Windows VM in each Kubernetes cluster.
  This automatic rolling ensures that all your VMs are patched. To avoid workload downtime, use the resource configuration recommended in the <a href="#master-recreated">Master Nodes</a> and <a href="#worker-recreated">Worker Nodes</a> sections below and
  <a href="maintain-uptime.html">Maintaining Workload Uptime</a>.</p>

## <a id="upgrade-tile"></a>Upgrade the <%= vars.product_tile %> Tile

Upgrading the <%= vars.product_tile %> tile results in the following changes:

* The PKS control plane VM is recreated. The PKS control plane VM hosts PKS API and UAA services.  

* The PKS MySQL VM is created. On <%= vars.product_short %> v1.6 the MySQL database resides 
      on the PKS control plane VM. 
      Upgrading <%= vars.product_short %> from v1.6 to PKS v1.7 creates a new MySQL-dedicated VM, 
      then migrates the PKS v1.6 MySQL data from the PKS control plane VM onto the new VM. 
      Subsequent <%= vars.product_short %> upgrades recreate this MySQL VM. 
    </p>

Upgrading the PKS control plane causes the following outages:

* [PKS API Server and CLI Outage](#server-recreated)

For more information about the PKS control plane, see [PKS Control Plane Overview](control-plane.html#control-plane) in _<%= vars.product_short %> Cluster Management_.


####<a name="canary"></a>Canary Instances

The <%= vars.product_tile %> tile is a BOSH deployment.

BOSH-deployed products can set a number of canary instances to upgrade first, before the rest of the deployment VMs.
BOSH continues the upgrade only if the canary instance upgrade succeeds.
If the canary instance encounters an error, the upgrade stops running and other VMs are not affected.

The <%= vars.product_tile %> tile uses one canary instance when deploying or upgrading <%= vars.product_short %>.

####<a id="after-upgrade"></a> What Happens After Upgrading the <%= vars.product_tile %> Tile

All changes applied to the <%= vars.product_tile %> tile, including both upgrades and configuration changes,
must be propagated to your Kubernetes clusters before the next change.  

If you upgrade the <%= vars.product_tile %> tile only, the upgrade and configuration changes are not propagated 
to your Kubernetes clusters and the Kubernetes cluster version falls behind the tile's PKS version. 


<p class="note warning"><strong>Warning</strong>: If your last <%= vars.product_short %> upgrade was for the 
  <%= vars.product_tile %> tile only, you must upgrade all of your Kubernetes clusters individually before 
  upgrading again. 
For instructions on upgrading individual Kubernetes clusters, see <a href="upgrade-clusters.html">Upgrading Clusters</a>.
</p>

## <a id="upgrade-clusters"></a>Upgrade <%= vars.product_tile %>-Provisioned Kubernetes Clusters

Upgrading <%= vars.product_short %>-provisioned Kubernetes clusters results in the following changes:

* Each of your Kubernetes clusters is recreated, one at a time. 
This includes the following stages for each cluster:
    * Master nodes are recreated.
    * Worker nodes are recreated.  
* Each node's Kubernetes version is upgraded to the version shipped with the 
    <%= vars.product_tile %> tile. 

Upgrading a Kubernetes cluster causes the following outages:

* [Master Nodes Outage](#master-recreated)
* [Worker Nodes Outage](#worker-recreated) 
    
When <%= vars.product_short %> recreates Kubernetes nodes, the upgrade runs on a single VM at a time. 
For more information, see the <%= vars.product_short %> [Release Notes](./release-notes.html).  

##<a id="upgrade-outages"></a>Upgrade Outages

<%= vars.product_short %> control plane and cluster functions are unavailable during specific 
portions of the upgrade process.

####<a id="server-recreated"></a>PKS API Server and CLI Outage

You cannot interact with the PKS control plane or manage 
Kubernetes clusters while the upgrade recreates the PKS API server. 
These restrictions prevent the following actions:  

  * Logging in through PKS CLI and using all `pks` commands
  * Retrieving information about clusters
  * Creating and deleting clusters
  * Resizing clusters

Recreating the PKS API server does not affect deployed Kubernetes clusters and their workloads. 
You can still interact with them through the Kubernetes Command Line Interface, `kubectl`.

####<a id="master-recreated"></a>Master Nodes Outage

You cannot interact with your Kubernetes cluster, use `kubectl`, or push new workloads, 
while <%= vars.product_short %> recreates the master node in a single-master cluster.

<p class="note"><strong>Note</strong>: To avoid loss of functionality, 
  Pivotal recommends using multi-master clusters.
</p>

####<a id="worker-recreated"></a>Worker Nodes Outage

During the upgrade, the VM stops running containers. 
If your workloads run on a single VM, your apps will experience downtime.

<p class="note"><strong>Note</strong>: To avoid downtime for stateless workloads, 
Pivotal recommends using at least one worker node per availability zone (AZ). 
For stateful workloads, Pivotal recommends using a minimum of two worker nodes per AZ.
</p>
