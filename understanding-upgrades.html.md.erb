---
title: Enterprise PKS Upgrades
owner: PKS
---

This topic compares full vs. tile-only <%= vars.product_short %> upgrades and explains what happens when the <%= vars.product_short %> control plane upgrades.
It also explains how to perform a tile-only upgrade and what its limitations are.

## <a id="overview"></a>Overview

An <%= vars.product_short %> upgrade modifies the version of the <%= vars.product_tile %> tile and automatically migrates your configuration settings into the new tile version.

By default, an <%= vars.product_short %> upgrade performs a _full upgrade_, which upgrades the control plane VMs and all <%= vars.product_short %>-provisioned Kubernetes clusters.
You can optionally perform a _tile-only_ upgrade, which upgrades the control plane VMs only.
With a tile-only upgrade, you must upgrade your <%= vars.product_short %>-provisioned Kubernetes clusters later.

For information about upgrading <%= vars.product_short %>, see [Upgrading <%= vars.product_short %>](upgrade-pks.html). 
For information about upgrading <%= vars.product_short %> Kubernetes clusters, see [Upgrading Clusters](upgrade-clusters.html).  

## <a id="types"></a>Full vs Tile-Only Upgrades

There are two types of <%= vars.product_short %> upgrades:

* **Full Upgrade** upgrades the <%= vars.product_tile %> control plane and all <%= vars.product_short %>-provisioned Kubernetes clusters.
  - This is the default behavior of the <%= vars.product_tile %> tile.

* **Tile-Only Upgrade** upgrades only the <%= vars.product_tile %> control plane.

### <a id="choice"></a> Choosing Full or Tile-Only Upgrade

Before you click **Apply Changes** to deploy an <%= vars.product_short %> upgrade, you can choose in the **Errands** pane whether or not to also upgrade all clusters:

* Enable the **Upgrade all clusters errand** checkbox to perform a full upgrade.
* Disable the **Upgrade all clusters errand** checkbox to upgrade the tile and control plane only.
  - See the [Tile-Only Upgrade](#tile-only) instructions below for how to perform a tile-only <%= vars.product_tile %> upgrade.
  - **Limitations** After performing a tile-only upgrade, 
  you cannot perform another <%= vars.product_tile %> tile upgrade 
  until you have upgraded your Kubernetes clusters to the current <%= vars.product_short %> version.  

## <a id="what-happens"></a> What Happens During Upgrade

During a <%= vars.product_short %> control plane upgrade to v1.7, the <%= vars.product_tile %> tile does the following:

1. **Creates MySQL VM (First-time v1.7 Upgrade Only)**: When you first upgrade from <%= vars.product_short %> v1.6 to v1.7, the upgrade process creates the <%= vars.control_plane_db %> VM, a new dedicated MySQL VM.
  - This MySQL VM resides alongside the <%= vars.control_plane %> VM on the PKS Control Plane.
  - The upgrade process then migrates the PKS v1.6 MySQL data from the <%= vars.control_plane %> VM onto the new dedicated MySQL VM.
  - Subsequent <%= vars.product_short %> upgrades, from earlier to later patch versions of PKS v1.7, do not include this step.

1. **Recreates the Control Plane VMs** which host the PKS API and UAA servers.
  * If the <%= vars.product_short %> installation is not scaled for high availability (beta), this control plane recreation causes temporary outages as described in [Non-HA Control Plane Outages](#outages), below.

1. **(Optional) Upgrades Clusters**
  * Upgrading <%= vars.product_short %> only upgrades its Kubernetes clusters if the **Upgrade all clusters errand** checkbox is enabled in the **Errands** pane.
  * The cluster upgrade process recreates all clusters, which may cause cluster outages.  
  For more information, see the [What Happens During Cluster Upgrades](./upgrade-clusters.html#what) section of the _Upgrading Clusters_ topic.

### <a id="outages"></a> Non-HA Control Plane Outages

When the <%= vars.product_short %> control plane is not scaled for high availability (beta), upgrading it temporarily interrupts the following:

  * Logging in to the PKS CLI and using all `pks` commands
  * Using the PKS API to retrieve information about clusters
  * Using the PKS API to create and delete clusters
  * Using the PKS API to resize clusters

Recreating the PKS API server does not affect the Kubernetes clusters themselves.

  * During PKS control plane upgrade, you can still interact with clusters and their workloads using the Kubernetes Command Line Interface, `kubectl`.

For more information about the PKS control plane and high availability (beta), see [PKS Control Plane Overview](control-plane.html#control-plane) in _<%= vars.product_short %> Architecture_.

### <a id="canary"></a>Canary Instances

The <%= vars.product_tile %> tile is a BOSH deployment.

BOSH-deployed products can set a number of canary instances to upgrade first, before the rest of the deployment VMs.
BOSH continues the upgrade only if the canary instance upgrade succeeds.
If the canary instance encounters an error, the upgrade stops running and other VMs are not affected.

The <%= vars.product_tile %> tile uses one canary instance when deploying or upgrading <%= vars.product_short %>.

##<a id="tile-only"></a> Tile-Only Upgrade

To perform a tile-only <%= vars.product_tile %> upgrade, in order to upgrade your control plane without upgrading your clusters yet, do the following:

  1. Review [Limitations](#limitations).
  1. Complete the steps listed in [Prerequisites](#prerequisites).
  1. Complete the steps listed in [Disable Errand and Apply Changes](#modify-apply).

  <p class="note"><strong>Note:</strong> Tile-only upgrades cause the Kubernetes cluster version to fall behind the <%= vars.product_tile %> tile version.
    If the clusters fall more than one version behind the tile,
    <%= vars.product_short %> cannot upgrade the clusters.
    The clusters must be upgraded to match the <%= vars.product_short %> tile version before the next tile upgrade.</p>

###<a id='limitations'></a> Limitations

After performing a tile-only <%= vars.product_tile %> upgrade, 
you cannot perform another <%= vars.product_tile %> upgrade until you upgrade your clusters.  

To simultaneously upgrade your <%= vars.product_tile %>
tile and existing Kubernetes clusters,
do not disable **Upgrade all clusters errand** in the <%= vars.product_tile %> tile.

###<a id='prerequisites'></a>Prerequisites

Before performing a tile-only <%= vars.product_tile %> upgrade, you must do the following:

* Install the PKS command line interface (CLI) v1.7. For more information, see [Installing the PKS CLI](installing-pks-cli.html).
1. Download the new <%= vars.product_short %> product file from [VMware Tanzu Network](https://network.pivotal.io/products/pivotal-container-service) and import it into the Ops Manager **Installation Dashboard**.
* Log in to <%= vars.product_short %> using `pks login`. For more information, see [Logging in to <%= vars.product_short %>](login.html).

###<a id='errand-apply'></a> Disable Errand and Apply Changes

To perform the tile-only <%= vars.product_short %> upgrade:

1. In the <%= vars.product_short %> tile, navigate to the **Errands** pane.
1. Disable **Upgrade all clusters errand** and click **Save**.
1. Return to the Ops Manager **Installation Dashboard** and click **Review Pending Changes**.
1. Select <%= vars.product_short %> and any other products that you want to deploy and click **Apply Changes**.

##<a id="after"></a> After a Tile-Only Upgrade

All changes applied to the <%= vars.product_tile %> tile, including upgrades and configuration changes,
must be propagated to your Kubernetes clusters before the next tile upgrade.
Therefore, if you perform a tile-only <%= vars.product_tile %> upgrade, you must upgrade all your Kubernetes clusters
before the next <%= vars.product_tile %> tile upgrade.

After a tile-only upgrade, you can use the PKS CLI commands `pks upgrade-cluster` and `pks upgrade-clusters` to upgrade Kubernetes clusters individually, in groups, or in groups with specified canary clusters.
See [Upgrading Clusters](upgrade-clusters.html#upgrade-clusters) for instructions.

<p class="note"><strong>Note</strong>: If clusters fall more than one version behind the tile, subsequent <%= vars.product_short %> upgrade attempts will fail.</p>
