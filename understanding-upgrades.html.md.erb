---
title: What Happens During Enterprise PKS Upgrades
owner: PKS
---

<strong><%= modified_date %></strong>

This topic explains what happens to Kubernetes clusters during <%= vars.product_full %> upgrades.

## <a id="introduction"></a>Introduction

<%= vars.product_short %> enables you to upgrade either the <%= vars.product_tile %> tile and all <%= vars.product_short %>-provisioned Kubernetes clusters or only the <%= vars.product_tile %> tile.

* [Upgrades of the <%= vars.product_tile %> Tile and <%= vars.product_short %>-Provisioned Clusters](#upgrade-all)
* [Upgrades of the <%= vars.product_tile %> Tile Only](#upgrade-tile)

During an upgrade of the <%= vars.product_tile %> tile, your configuration settings are automatically migrated to the new tile version. For upgrading instructions, see [Upgrading <%= vars.product_short %>](upgrade-pks.html).

<p class="note"><strong>Note</strong>: Upgrading from <%= vars.product_short %> v1.2.5+ to <%= vars.product_short %> v1.3.x causes all certificates to be automatically regenerated. The old certificate authority is still trusted, and has a validity of one year. But the new certificates are signed with a new certificate authority, which is valid for four years.</p>

### <a id="canary"></a>Canary Instances

The <%= vars.product_tile %> tile is a BOSH deployment.
When you deploy or upgrade a product using BOSH, the number of canary instances can affect the deployment.

BOSH-deployed products can set a number of canary instances to upgrade first, before the rest of the deployment VMs.
BOSH continues the upgrade only if the canary instance upgrade succeeds.
If the canary instance encounters an error, the upgrade stops running and other VMs are not affected.

The <%= vars.product_tile %> tile uses one canary instance when deploying or upgrading <%= vars.product_short %>.

## <a id="upgrade-all"></a>Upgrades of the <%= vars.product_tile %> Tile and <%= vars.product_short %>-Provisioned Clusters

During an upgrade of the <%= vars.product_tile %> tile and <%= vars.product_short %>-provisioned clusters, the following occurs:

1. The PKS API server is recreated. For more information, see [PKS API Server](#server-recreated).

1. Each of your Kubernetes clusters is recreated, one at a time. This includes the following stages for each cluster:
  1. Master nodes are recreated. For more information, see [Master Nodes](#master-recreated).
  1. Worker nodes are recreated. For more information, see [Worker Nodes](#worker-recreated).

 <p class="note"><strong>Note</strong>: When <%= vars.product_short %> is set to upgrade both the <%= vars.product_tile %> tile and <%= vars.product_short %>-provisioned clusters, updating any stemcell in your deployment rolls every VM in each Kubernetes cluster. This ensures that all the VMs are patched. With the recommended resource configuration described above, no workload downtime is expected. For information about maintaining your Kubernetes workload uptime, see <a href="maintain-uptime.html">Maintaining Workload Uptime</a>.</p>

###<a id="server-recreated"></a>PKS API Server

When the PKS API server is recreated, you cannot interact with the PKS control plane or manage Kubernetes clusters. These restrictions prevent you from performing the following actions:

  * Logging in through the PKS CLI
  * Retrieving information about clusters
  * Creating and deleting clusters
  * Resizing clusters

Recreating the PKS API server does not affect deployed Kubernetes clusters and their workloads. You can still interact with them through the Kubernetes Command Line Interface, `kubectl`.

For more information about the PKS control plane, see [PKS Control Plane Overview](control-plane.html#control-plane) in _<%= vars.product_short %> Cluster Management_.

###<a id="master-recreated"></a>Master Nodes

When <%= vars.product_short %> recreates a single-master cluster during an upgrade, you cannot interact with your cluster, use `kubectl`, or push new workloads.

<p class="note"><strong>Note</strong>: To avoid this loss of functionality, Pivotal recommends using multi-master clusters.</p>

###<a id="worker-recreated"></a>Worker Nodes

When <%= vars.product_short %> recreates worker nodes, the upgrade runs on a single VM at a time. During the upgrade, the VM stops running containers. If your workloads run on a single VM, your apps will experience downtime.

When worker nodes are recreated, <%= vars.product_short %> upgrades Kubernetes to the version shipped with the <%= vars.product_tile %> tile. See [Enterprise PKS Release Notes](./release-notes.html).

<p class="note"><strong>Note</strong>: To avoid downtime for stateless workloads, Pivotal recommends using at least one worker node per availability zone (AZ). For stateful workloads, Pivotal recommends using a minimum of two worker nodes per AZ.</p>

## <a id="upgrade-tile"></a>Upgrades of the <%= vars.product_tile %> Tile Only

During an upgrade of the <%= vars.product_tile %> tile only, the PKS API server is recreated.

When the PKS API server is recreated, you cannot interact with the PKS control plane or manage Kubernetes clusters. These restrictions prevent you from performing the following actions:

  * Logging in through the PKS CLI
  * Retrieving information about clusters
  * Creating and deleting clusters
  * Resizing clusters

Recreating the PKS API server does not affect deployed Kubernetes clusters and their workloads. You can still interact with them through the Kubernetes Command Line Interface, `kubectl`.

To upgrade the <%= vars.product_tile %> tile only, set the **Upgrade all clusters errand** to **Off** before you begin the upgrade.
For more information, see [Upgrade the PKS Tile](upgrade-pks.html#upgrade-tile) in _Upgrading <%= vars.product_short %>_.

For more information about the PKS control plane, see [PKS Control Plane Overview](control-plane.html#control-plane) in _<%= vars.product_short %> Cluster Management_.

<p class="note"><strong>Note</strong>: When <%= vars.product_short %> is set to upgrade only the <%= vars.product_tile %> tile and not the clusters, the Kubernetes cluster version falls behind the <%= vars.product_tile %> tile version. If the clusters fall more than one version behind the tile, <%= vars.product_short %> cannot upgrade the clusters. The clusters must be upgraded to match the <%= vars.product_short %> tile version before the next tile upgrade.</p>
