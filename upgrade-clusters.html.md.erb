---
title: Upgrading Clusters
owner: PKS
---

This topic describes how to upgrade Kubernetes clusters provisioned by <%= vars.product_full %>.

##<a id='overview'></a>Overview

When upgrading <%= vars.product_short %>, you can choose one of the following approaches:

* Upgrade the <%= vars.product_tile %> tile and all <%= vars.product_short %>-provisioned Kubernetes clusters simultaneously.
This is the default behavior of the <%= vars.product_tile %> tile.
* Upgrade the <%= vars.product_tile %> tile only and then upgrade <%= vars.product_short %>-provisioned Kubernetes clusters separately.
If you want to upgrade your clusters separately, do the following:
  1. Review [Limitations](#limitations).
  1. Complete the steps listed in [Prerequisites](#prerequisites).
  1. Complete the steps listed in [Upgrade Clusters](#upgrade-clusters).

    <p class="note"><strong>Note:</strong> When <%= vars.product_short %> is set to upgrade the <%= vars.product_tile %> tile only and
    not the clusters, the Kubernetes cluster version falls behind the <%= vars.product_tile %> tile version.
    If the clusters fall more than one version behind the tile,
    <%= vars.product_short %> cannot upgrade the clusters.
    The clusters must be upgraded to match the <%= vars.product_short %> tile version before the next tile upgrade.</p>

For more information about <%= vars.product_short %> upgrades,
see [What Happens During <%= vars.product_short %> Upgrades](understanding-upgrades.html).

##<a id='prerequisites'></a>Prerequisites

Before upgrading Kubernetes clusters provisioned by <%= vars.product_short %>, you must do the following:

* Install the PKS command line interface (CLI) v1.5 or later. For more information, see [Installing the PKS CLI](installing-pks-cli.html).
* Disable **Upgrade all clusters errand** in the <%= vars.product_tile %> tile. For more information, see [Modify Errand Configuration in the <%= vars.product_tile %> Tile](#disable-errand) below.
  <p class="note warning"><strong>Warning:</strong> If you upgrade the <%= vars.product_tile %> tile or update your tile configuration, with <strong>Upgrade all clusters errand</strong> disabled,
  you must upgrade all your Kubernetes clusters before the next upgrade or configuration update.</p>

###<a name='disable-errand'></a> Modify Errand Configuration in the <%= vars.product_tile %> Tile

To modify errand configuration when upgrading your <%= vars.product_short %> version, perform the steps below.
For more information about upgrading <%= vars.product_short %>, see [Upgrading <%= vars.product_short %>](upgrade-pks.html).

1. If you have not already, import the product file for the new <%= vars.product_short %> version to the Ops Manager **Installation Dashboard**.
1. In the the <%= vars.product_tile %> tile, navigate to the **Errands** pane.
1. Disable **Upgrade all clusters errand** and click **Save**.
  ![Errands pane](images/disable-upgrade-all-clusters-errand.png)
1. Return to the Ops Manager **Installation Dashboard** and click **Review Pending Changes**.
1. Select <%= vars.product_short %> and any other products you want to deploy and click **Apply Changes**.

##<a id='upgrade-clusters'></a>Upgrade Clusters

You can upgrade your <%= vars.product_tile %>-provisioned Kubernetes clusters
separately from upgrading your <%= vars.product_tile %> tile.  

After upgrading your <%= vars.product_tile %> tile, upgrade individual or multiple 
clusters using the following procedures:

* [Upgrade a Single Kubernetes Cluster](#upgrade-cluster)  
* [Upgrade Multiple Kubernetes Clusters](#upgrade-clusters-multi)

Monitor or stop your cluster upgrades by following the procedures in 
[Manage Your Kubernetes Cluster Upgrade Job](#manage-upgrade).  

For more information about the `pks upgrade-clusters` command, see [pks upgrade-clusters](cli/index.html#upgrade-clusters) in the _PKS CLI_ documentation.    

###<a id='upgrade-cluster'></a>Upgrade a Single Kubernetes Cluster

To upgrade a single Kubernetes cluster, 
run the following command:

```
pks upgrade-cluster CLUSTER-NAME
```
Where `CLUSTER-NAME` is the name of the Kubernetes cluster you want to upgrade.

To upgrade multiple clusters, see [Upgrade Multiple Kubernetes Clusters](#upgrade-clusters-multi), below.  

###<a id='upgrade-clusters-multi'></a>Upgrade Multiple Kubernetes Clusters

The <%= vars.product_short %> CLI provides `upgrade-clusters` for upgrading multiple <%= vars.product_tile %>-provisioned Kubernetes clusters. 
`upgrade-clusters` can upgrade multiple clusters either serially or in parallel.  

To upgrade a single cluster, also see [Upgrade a Single Kubernetes Cluster](#upgrade-cluster) above. 

####<a id='upgrade-clusters-serial'></a> Upgrade Multiple Kubernetes Clusters Serially

To upgrade multiple Kubernetes clusters serially, run the following command:

```
pks upgrade-clusters --clusters CLUSTER-NAMES  --wait
```
Where:

* `CLUSTER-NAMES` is a comma-delimited list of the names of the Kubernetes clusters you want to upgrade.
    * If an upgrade fails for a cluster in the `CLUSTER-NAMES` list, the job continues to the next specified cluster. 

For example:

<pre class="terminal">
$ pks upgrade-clusters --clusters k8-cluster-000,k8-cluster-001,k8-cluster-002  --wait
<br>
You are about to upgrade k8-cluster-000.
Warning: This operation may be long running and may block further operations on the cluster(s) until complete

Continue? (y/n):y
Your taskID for the upgrade task is: ce31a1bb-380a-453f-afa0-835ffa1ce6ac
Started upgrading cluster: k8-cluster-000
Upgrading cluster failed: k8-cluster-000
Started upgrading cluster: k8-cluster-001
Upgrading cluster failed: k8-cluster-001
Started upgrading cluster: k8-cluster-002
Upgrading cluster failed: k8-cluster-002
Upgrade task ce31a1bb-380a-453f-afa0-835ffa1ce6ac is done.
</pre>

<p class="note"><strong>Note:</strong> To run the cluster upgrade job as a background task, 
  remove the <code>--wait</code> argument.
</p>

####<a id='upgrade-clusters-errors'></a> Upgrade Multiple Kubernetes Clusters Until Error

To configure your cluster upgrade job to automatically stop if one of the cluster upgrades fails, 
run the following command:

```
pks upgrade-clusters --canaries CANARY-CLUSTER-NAMES  --clusters CLUSTER-NAMES  --wait
```
Where:

* `CANARY-CLUSTER-NAMES` is a comma-delimited list of the names of the Kubernetes clusters you want to upgrade. 

* `CLUSTER-NAMES` is a comma-delimited list of the names of the additional Kubernetes clusters you want to upgrade.
    * The clusters in your `CANARY-CLUSTER-NAMES` and `CLUSTER-NAMES` lists are upgraded serially, in your specified order. 
    The clusters in your `CANARY-CLUSTER-NAMES` list are upgraded prior to upgrading the clusters specified in your `CLUSTER-NAMES` list.  
    * If an upgrade fails for a cluster in the `CANARY-CLUSTER-NAMES` list, the entire `upgrade-clusters` job stops.  
    * If an upgrade fails for a cluster in the `CLUSTER-NAMES` list, the job continues to the next specified cluster.  

    <p class="note"><strong>Note:</strong> <code>--clusters</code> is a required argument. 
    To configure <code>upgrade-clusters</code> to stop for any cluster upgrade failure, 
    add the majority of your upgrade clusters to your <code>CANARY-CLUSTER-NAMES</code> list and
    specify only one cluster in your <code>CLUSTER-NAMES</code> list.
    </p>

For example:

<pre class="terminal">
$ pks upgrade-clusters --canaries k8-cluster-dev,k8-cluster-000,k8-cluster-001  --clusters k8-cluster-002  --wait
</pre>

<p class="note"><strong>Note:</strong> To run the cluster upgrade job as a background task, 
  remove the <code>--wait</code> argument.
</p>

####<a id='upgrade-clusters-parallel'></a> Upgrade Multiple Kubernetes Clusters in Parallel

To upgrade multiple Kubernetes clusters simultaneously, run the following command:

```
pks upgrade-clusters --clusters CLUSTER-NAMES --max-in-flight CLUSTER-COUNT  --wait
```
Where:

* `CLUSTER-NAMES` is a comma-delimited list of the names of the Kubernetes clusters you want to upgrade. 

* `CLUSTER-COUNT` is the maximum number of clusters to upgrade simultaneously. 
Subsequent clusters are queued and upgraded in parallel in the order you specified.  
    * The clusters in your `CLUSTER-NAMES` list are upgraded in your specified order. 
    If an upgrade fails for a specified cluster, the job continues to the next specified cluster. 

    <p class="note"><strong>Note:</strong> <code>max-in-flight</code> is an optional argument. 
      If <code>max-in-flight</code> is not set, <%= vars.product_short %> uses the default 
      <code>max-in-flight</code> value of <code>1</code>.
    </p>

For example:

<pre class="terminal">
$ pks upgrade-clusters --clusters k8-cluster-000,k8-cluster-001,k8-cluster-002 --max-in-flight 2  --wait
<br>
You are about to upgrade k8-cluster-000, k8-cluster-001 and k8-cluster-002.
Warning: This operation may be long running and may block further operations on the cluster(s) until complete
<br>
Continue? (y/n):y
Your taskID for the upgrade task is: d772aba0-2670-4fba-b26c-044b19d6ab60
Started upgrading cluster: k8-cluster-000
Started upgrading cluster: k8-cluster-001
Finished upgrading cluster: k8-cluster-000
Started upgrading cluster: k8-cluster-002
Finished upgrading cluster: k8-cluster-001
Finished upgrading cluster: k8-cluster-002
Upgrade task d772aba0-2670-4fba-b26c-044b19d6ab60 is done.
</pre>

<p class="note"><strong>Note:</strong> To run the cluster upgrade job as a background task, 
  remove the <code>--wait</code> argument.
</p>

####<a id='upgrade-clusters-parallel-error'></a> Upgrade Multiple Kubernetes Clusters in Parallel Until Error

To configure your cluster upgrade job to upgrade clusters in parallel and automatically stop if one of the cluster upgrades fails, 
run the following command:

```
pks upgrade-clusters --canaries CANARY-CLUSTER-NAMES  --clusters CLUSTER-NAMES --max-in-flight CLUSTER-COUNT  --wait
```
Where:

* `CANARY-CLUSTER-NAMES` is a comma-delimited list of the names of the Kubernetes clusters you want to upgrade.  

* `CLUSTER-NAMES` is a comma-delimited list of the names of the additional Kubernetes clusters you want to upgrade.  

* `CLUSTER-COUNT` is the maximum number of clusters to upgrade simultaneously. 
    * The clusters in your `CANARY-CLUSTER-NAMES` list are upgraded prior to upgrading the clusters specified in your 
    `CLUSTER-NAMES` list. The clusters in a list are upgraded in parallel.
    * If an upgrade fails for a cluster in the `CANARY-CLUSTER-NAMES` list, the entire `upgrade-clusters` job stops. 
    If an upgrade fails for a cluster in the `CLUSTER-NAMES` list, the job continues to the next specified cluster.
    * If your `max-in-flight` value is less than the number of clusters in either your `CANARY-CLUSTER-NAMES` or `CLUSTER-NAMES` lists, 
    the first `CLUSTER-COUNT` of clusters in a list are upgraded in parallel and subsequent clusters are queued and 
    upgraded in the order you specified.  

    <p class="note"><strong>Note:</strong> <code>--clusters</code> is a required argument. 
    To direct <code>upgrade-clusters</code> to test every cluster upgrade for failure, 
    add the majority of your upgrade clusters to your <code>CANARY-CLUSTER-NAMES</code> list and
    specify only one cluster in your <code>CLUSTER-NAMES</code> list.
    </p>

    <p class="note"><strong>Note:</strong> <code>max-in-flight</code> is an optional argument. 
      If <code>max-in-flight</code> is not set, <%= vars.product_short %> uses the default 
      <code>max-in-flight</code> value of <code>1</code>.
    </p>

For example:

<pre class="terminal">
$ pks upgrade-clusters  --canaries k8-cluster-dev,k8-cluster-000,k8-cluster-001 --clusters k8-cluster-002 --max-in-flight 2
<br>
You are about to upgrade k8-cluster-dev, k8-cluster-000, k8-cluster-001 and k8-cluster-002.
Warning: This operation may be long running and may block further operations on the cluster(s) until complete
<br>
Continue? (y/n):y
Your taskID for the upgrade task is: 884f753b-0175-4514-b5af-a7d8c114bb27
</pre>

<p class="note"><strong>Note:</strong> To run the cluster upgrade job as a background task, 
  remove the <code>--wait</code> argument.
</p>

###<a id='manage-upgrade'></a> Manage Your Kubernetes Cluster Upgrade Job

You can use the PKS CLI to monitor and manage your <%= vars.product_tile %>-provisioned Kubernetes cluster 
upgrade jobs.  

####<a id='monitor-upgrades'></a> Monitor Your Kubernetes Cluster Status

To review the status of the actions being performed on your clusters, 
run the following command:

```
pks clusters
```

For example:
<pre class="terminal">
$ pks clusters
<br>
Upgrade is available to PKS Version: 1.6.0-build.14
<br>
PKS Version     Name               k8s Version  Plan Name  UUID                                  Status       Action
1.6.0-build.14  k8-cluster-000     1.14.5       small      9527ebaa-e2fa-422f-a52b-de3c3f0e39a4  succeeded    UPGRADE
1.6.0-build.14  k8-cluster-001     1.14.5       small      9527ebaa-e2fa-422f-a52b-de3c3f0e39a4  failed       UPGRADE
1.6.0-build.14  k8-cluster-002     1.14.5       small      9527ebaa-e2fa-422f-a52b-de3c3f0e39a4  in progress  UPGRADE
1.6.0-build.14  k8-cluster-003     1.14.5       small      9527ebaa-e2fa-422f-a52b-de3c3f0e39a4  queued       UPGRADE
</pre>

####<a id='monitor-upgrade-job'></a> Monitor Your Kubernetes Cluster Upgrade Job

To review the status of your cluster upgrade job, run the following command:

```
pks task UPGRADE-JOB-ID
```

Where `UPGRADE-JOB-ID` is the job ID returned when you ran `pks upgrade-clusters`.

For example:
<pre class="terminal">
$ pks task ce31a1bb-380a-453f-afa0-835ffa1ce6ac
<br>
Your upgrade task is: done
<br>
Name           Status  Start time                     End time                            isCanary
k8-cluster-000 failed  Mon, 14 Oct 2019 12:00:00 PDT  Mon, 14 Oct 2019 12:19:54 PDT       succeeded
k8-cluster-001 failed  Mon, 14 Oct 2019 12:20:00 PDT  ---                                 false
</pre>

####<a id='stop-upgrade-job'></a> Stop Your Kubernetes Cluster Upgrade Job

To cancel a running cluster upgrade job, run the following command:

```
pks cancel-task UPGRADE-JOB-ID
```

Where `UPGRADE-JOB-ID` is the job ID returned when you ran `pks upgrade-clusters`.

##<a id='limitations'></a> Limitations

If you upgrade the <%= vars.product_tile %> tile only
and then attempt to resize or update your existing Kubernetes clusters,
these operations fail until you upgrade the clusters.

If you want to upgrade the <%= vars.product_tile %>
tile and your existing Kubernetes clusters simultaneously,
do not disable **Upgrade all clusters errand** in the <%= vars.product_tile %> tile.
