---
title: Preparing vSphere Before Deploying Enterprise PKS
owner: Ops Manager
---

<strong><%= modified_date %></strong>

This topic describes how to prepare your vSphere environment before deploying <%= vars.product_full %>.

## <a id='overview'></a>Overview

Before you install <%= vars.product_short %> on vSphere **without** NSX-T
integration, you must prepare your vSphere environment by creating the
required service accounts and configuring DNS for the PKS API endpoint.

You must create the following service accounts in vSphere:

* **Master Node Service Account** for the Kubernetes master node VMs.
* **BOSH/Ops Manager Service Account** for BOSH Director operations.

<p class="note warning"><strong> WARNING:</strong> The PKS Master Node and 
BOSH/Ops Manager service accounts must be two separate accounts.</p>

After creating the Master Node and BOSH/Ops Manager service accounts you must grant 
the accounts privileges in vSphere:  

* **Master Node Service Account**: Kubernetes master node VMs require storage permissions to create load balancers 
and attach persistent disks to pods. Creating a custom role for this service account allows vSphere to apply 
the same privileges to all Kubernetes master node VMs in your <%= vars.product_short %> installation.

* **BOSH/Ops Manager Service Account**: BOSH Director requires permissions to create VMs.
You can apply privileges directly to this service account without creating a role.
You can also apply the default 
[VMware Administrator System Role](https://docs.vmware.com/en/VMware-vSphere/6.7/com.vmware.vsphere.security.doc/GUID-93B962A7-93FA-4E96-B68F-AE66D3D6C663.html) 
to this service account to achieve the appropriate permission level.

<%= vars.vm_credentials %>

<p class="note"><strong>Note</strong>: If your Kubernetes clusters span
multiple vCenters, you must set the service account privileges correctly in
each vCenter.</p>

To prepare your vSphere environment, do the following:

1. [Create the Master Node Service Account](#create-master)
1. [Grant Storage Permissions](#addl-permissions)
1. [Create the BOSH/Ops Manager Service Account](#create-bosh-ops-man)
1. [Grant Permissions to the BOSH/Ops Manager Service Account](#grant-bosh-ops-man)
1. [Configure DNS for the PKS API](#dns)

## <a id='prerequisites'></a>Prerequisites

Before you prepare your vSphere environment, you must fulfill the prerequisites in [vSphere Prerequisites and Resource Requirements](vsphere-requirements.html).

## <a id="create-master"></a>Create the Master Node Service Account

1. From the vCenter console, create a service account for Kubernetes cluster master VMs.

1. Grant the following **Virtual Machine Object** privileges to the service account:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Virtual Machine > Configuration > Advanced</td><td>VirtualMachine.Configuration.Advanced</td></tr>
      <tr><td>Virtual Machine > Configuration > Settings</td><td>VirtualMachine.Configuration.Settings</td></tr>
  </table>

## <a id="addl-permissions"></a>Grant Storage Permissions

Kubernetes master node VM service accounts require the following:

* Read access to the folder, host, and datacenter of the cluster node VMs
* Permission to create and delete VMs within the resource pool where <%= vars.product_short %> is deployed

Grant these permissions to the master node service account based on your storage configuration using one of the procedures below:

* [Static Only Persistent Volume Provisioning](#static-only)
* [Dynamic Persistent Volume Provisioning (with Storage Policy-Based Volume Placement)](#dynamic-policy)
* [Dynamic Persistent Volume Provisioning (without Storage Policy-Based Volume Placement)](#dynamic-no-policy)

For more information about vSphere storage configurations, see [vSphere Storage for Kubernetes](https://vmware.github.io/vsphere-storage-for-kubernetes/documentation/index.html) in the VMware vSphere documentation.

### <a id="static-only"></a>Static Only Persistent Volume Provisioning

To configure your Kubernetes master node service account using static only Persistent Volume (PV) provisioning, do the following:

1. Create a custom role that allows the service account to manage Kubernetes node VMs. Give this role a name. For example, `manage-k8s-node-vms`. For more information about custom roles in vCenter, see [Create a Custom Role](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-41E5E52E-A95B-4E81-9724-6AD6800BEF78.html) in the VMware vSphere documentation.
  1. Grant the following privileges at the **VM Folder** level using either the vCenter UI or API:
    <table>
      <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
        <tr><td>Virtual Machine > Configuration > Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
        <tr><td>Virtual Machine > Configuration > Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
    </table>
    1. Select the **Propagate to Child Objects** checkbox.

1. (Optional) Create a custom role that allows the service account to manage Kubernetes volumes. Give this role a name. For example, `manage-k8s-volumes`.
  <p class="note"><strong>Note</strong>: This role is required if you create a Persistent Volume Claim (PVC) to bind with a statically provisioned PV, and the reclaim policy is set to delete.
When the PVC is deleted, the statically provisioned PV is also deleted.</p>
  1. Grant the following privilege at the **Datastore** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Datastore > Low level file operations</td><td>Datastore.FileManagement</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Grant the service account the existing **Read-only** role. This role includes the following privileges at the **vCenter, Datacenter, Datastore Cluster,** and **Datastore Storage Folder** levels:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Read-only</td><td>System.Anonymous</td></tr>
      <tr><td></td><td>System.Read</td></tr>
      <tr><td></td><td>System.View</td></tr>
  </table>

1. Continue to [Create the BOSH/Ops Manager Service Account](#create-bosh-ops-man).

### <a id="dynamic-policy"></a>Dynamic Persistent Volume Provisioning (with Storage Policy-Based Volume Placement)

To configure your Kubernetes master node service account using dynamic PV provisioning **with** storage policy-based placement, do the following:

1. Create a custom role that allows the service account to manage Kubernetes node VMs. Give this role a name. For example, `manage-k8s-node-vms`. For more information about custom roles in vCenter, see [Create a Custom Role](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-41E5E52E-A95B-4E81-9724-6AD6800BEF78.html) in the VMware vSphere documentation.
  1. Grant the following privileges at the **Cluster, Hosts,** and **VM Folder** levels using either the vCenter UI or API:
    <table>
      <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
        <tr><td>Virtual Machine > Resource > Assign virtual machine to resource pool</td><td>Resource.AssignVMToPool</td></tr>
        <tr><td>Virtual Machine > Configuration > Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
        <tr><td>Virtual Machine > Configuration > Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
        <tr><td>Virtual Machine > Inventory > Create new</td><td>VirtualMachine.Inventory.Create</td></tr>
        <tr><td>Virtual Machine > Inventory > Remove</td><td>VirtualMachine.Inventory.Delete</td></tr>
    </table>
    1. Select the **Propagate to Child Objects** checkbox.

1. Create a custom role that allows the service account to manage Kubernetes volumes. Give this role a name. For example, `manage-k8s-volumes`.
  1. Grant the following privilege at the **Datastore** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Datastore > Allocate space</td><td>Datastore.AllocateSpace</td></tr>
      <tr><td>Datastore > Low level file operations</td><td>Datastore.FileManagement</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Create a custom role that allows the service account to read the Kubernetes storage profile. Give this role a name. For example, `k8s-system-read-and-spbm-profile-view`.
  1. Grant the following privilege at the **vCenter** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Profile-driven storage view</td><td>StorageProfile.View</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Grant the service account the existing **Read-only** role. This role includes the following privileges at the **vCenter, Datacenter, Datastore Cluster,** and **Datastore Storage Folder** levels:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Read-only</td><td>System.Anonymous</td></tr>
      <tr><td></td><td>System.Read</td></tr>
      <tr><td></td><td>System.View</td></tr>
  </table>

1. Continue to [Create the BOSH/Ops Manager Service Account](#create-bosh-ops-man).

###<a id="dynamic-no-policy"></a>Dynamic Volume Provisioning (without Storage Policy-Based Volume Placement)

To configure your Kubernetes master node service account using dynamic PV provisioning **without** storage policy-based placement, do the following:

1. Create a custom role that allows the service account to manage Kubernetes node VMs. Give this role a name. For example, `manage-k8s-node-vms`. For more information about custom roles in vCenter, see [Create a Custom Role](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-41E5E52E-A95B-4E81-9724-6AD6800BEF78.html) in the VMware vSphere documentation.
  1. Grant the following privileges at the **Cluster, Hosts,** and **VM Folder** levels using either the vCenter UI or API:
    <table>
      <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
        <tr><td>Virtual Machine > Configuration > Add existing disk</td><td>VirtualMachine.Config.AddExistingDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add new disk</td><td>VirtualMachine.Config.AddNewDisk</td></tr>
        <tr><td>Virtual Machine > Configuration > Add or remove device</td><td>VirtualMachine.Config.AddRemoveDevice</td></tr>
        <tr><td>Virtual Machine > Configuration > Remove disk</td><td>VirtualMachine.Config.RemoveDisk</td></tr>
    </table>
    1. Select the **Propagate to Child Objects** checkbox.

1. Create a custom role that allows the service account to manage Kubernetes volumes. Give this role a name. For example, `manage-k8s-volumes`.
  1. Grant the following privilege at the **Datastore** level using either the vCenter UI or API:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Datastore > Allocate space</td><td>Datastore.AllocateSpace</td></tr>
      <tr><td>Datastore > Low level file operations</td><td>Datastore.FileManagement</td></tr>
  </table>
  1. Clear the **Propagate to Child Objects** checkbox.

1. Grant the service account the existing **Read-only** role. This role includes the following privileges at the **vCenter, Datacenter, Datastore Cluster,** and **Datastore Storage Folder** levels:
  <table>
    <tr><th>Privilege (UI)</th><th>Privilege (API)</th></tr>
      <tr><td>Read-only</td><td>System.Anonymous</td></tr>
      <tr><td></td><td>System.Read</td></tr>
      <tr><td></td><td>System.View</td></tr>
  </table>

## <a id='create-bosh-ops-man'></a>Create the BOSH/Ops Manager Service Account
1. From the vCenter console, create the BOSH/Ops Manager Service Account.  
1. If you are deploying both PAS and PKS within the same vSphere environment, 
create an additional BOSH/Ops Manager Service Account, so that there is one account for PAS and a separate account for PKS.  

## <a id='grant-bosh-ops-man'></a>Grant Permissions to the BOSH/Ops Manager Service Account
There are two options for granting permissions to the BOSH/Ops Manager Service Account(s):

* Grant minimal permissions. Grant each BOSH/Ops Manager Service Account the minimum required permissions as described in 
[vSphere Service Account Requirements](https://docs.pivotal.io/pivotalcf/om/vsphere/vsphere-service-account.html).  
* Grant Administrator Role permissions. Apply the default VMware Administrator Role to each BOSH/Ops Manager Service Account as described in 
[vCenter Server System Roles](https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.security.doc/GUID-93B962A7-93FA-4E96-B68F-AE66D3D6C663.html) 
.  

    <p class="note warning"><strong>Warning</strong>: Applying the VMware Administrator Role to the BOSH/Ops Manager Service Account grants the account more privileges than are required.
    For optimal security always use the least privileged account.</p>

## <a id='dns'></a>Configure DNS for the PKS API

Navigate to your DNS provider and create an entry for a fully qualified domain name (FQDN) within your system domain. For example, `api.pks.example.com`.

When you configure the <%= vars.product_tile %> tile, enter this FQDN in the **PKS API** pane.

After you deploy <%= vars.product_short %>, you map the IP address of the PKS API to this FQDN. You can then use this FQDN to access the PKS API from your local system.

## <a id="next-steps"></a>Next Steps

After you complete the instructions provided in this topic, install one of the following:

* Ops Manager v2.4.2 or later
* Ops Manager v2.5.x
* Ops Manager v2.6.x

<p class="note"><strong>Note:</strong> You use Ops Manager to install and configure <%= vars.product_short %>. Each
version of Ops Manager supports multiple versions of <%= vars.product_short %>. To confirm that your Ops Manager version
supports the version of <%= vars.product_short %> that you install, see <a href="release-notes.html"><%= vars.product_short %> Release Notes</a>.</p>

To install a compatible Ops Manager version, follow the instructions in the 
table below:

<table>
  <tr>
    <th>Version</th>
    <th></th>
  </tr>
  <tr>
    <td>Ops Manager 2.4</td>
    <td>
      <ol>
        <li><a href="https://docs.pivotal.io/pcf/om/2-4/vsphere/deploy.html">Deploying Ops Manager on vSphere</a></li>
        <li><a href="https://docs.pivotal.io/pcf/om/2-4/vsphere/config.html">Configuring BOSH Director on vSphere</a></li>
      </ol>
    </td>
  </tr>
  <tr>
    <td>Ops Manager 2.5</td>
    <td>
      <ol>
        <li><a href="https://docs.pivotal.io/pcf/om/2-5/vsphere/deploy.html">Deploying Ops Manager on vSphere</a></li>
        <li><a href="https://docs.pivotal.io/pcf/om/2-5/vsphere/config.html">Configuring BOSH Director on vSphere</a></li>
      </ol>
    </td>
  </tr>
  <tr>
    <td>Ops Manager 2.6</td>
    <td>
      <ol>
        <li><a href="https://docs.pivotal.io/pcf/om/2-6/vsphere/deploy.html">Deploying Ops Manager on vSphere</a></li>
        <li><a href="https://docs.pivotal.io/pcf/om/2-6/vsphere/config.html">Configuring BOSH Director on vSphere</a></li>
      </ol>
    </td>
  </tr>
</table>
