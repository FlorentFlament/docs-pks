---
title: Configuring Windows Worker-Based Kubernetes Clusters (Beta)
owner: PKS
windowsbeta: true
---

This topic describes configuring Windows worker-based Kubernetes clusters in <%= vars.product_full %>.  

## <a id='overview'></a>Overview

In <%= vars.product_short %> you can provision a Windows worker-based Kubernetes cluster on vSphere with Flannel.  

To provision a Windows worker-based Kubernetes cluster:  

1. Verify your environment meets the Windows worker-based Kubernetes cluster [Prerequisites](#prerequisites).  
1. [Configure a Windows Worker-Based Kubernetes Cluster](#install).  
1. [Upload the Windows Server Stemcell](#upload-stemcell).  
1. [Create a Windows Worker-Based Cluster](#create-cluster).  

<p class="note warning"> <strong>IMPORTANT: </strong> Support for Windows-based Kubernetes clusters is in beta 
and supports only vSphere with Flannel. <br><br>Do not enable this feature if you are using <%= vars.product_short %> v1.5
with vSphere with NSX-T, Google Cloud Platform (GCP), Azure, or Amazon Web Services (AWS).<br>
</p>

We are actively looking for feedback on this beta feature. To submit feedback, send an email to pcf-windows@pivotal.io. 
 

## <a id='prerequisites'></a>Prerequisites
The following are required for creating a Windows worker-based Kubernetes cluster in <%= vars.product_short %> v1.5:

* Your vSphere environment meets the [vSphere Prerequisites and Resource Requirements](vsphere-requirements.html).  
* <%= vars.product_short %> must be installed in a vSphere with Flannel environment.  
    <p class="note"><strong>Note:</strong> NSX-T does not support networking Windows containers. 
      If this is a key requirement for you, submit feedback by sending an email to pcf-windows@pivotal.io.
    </p>
* <%= vars.product_short %> has been configured as described in [Installing Enterprise PKS on vSphere](installing-pks-vsphere.html).  
* You must have a vSphere stemcell 2019.7 or later for Windows Server version 2019.  

    <p class="note"><strong>Note:</strong> vSphere Windows Server stemcells are not available on the 
    	<a href="https://network.pivotal.io/">Pivotal Network</a>.  vSphere Windows Server stemcells must be created by using Stembuild 
    	and your own Windows Server ISO. For information about creating vSphere Windows Server stemcells, see 
    <a href="https://docs.pivotal.io/pivotalcf/2-7/windows/stemcells.html#stemcell">Windows Stemcells</a> 
    in <i>Downloading or Creating Windows Stemcells</i>.
    </p>
* If your <%= vars.product_short %> installation is in an internetless environment, you must prepare a Windows 
pause image in a private registry. For information about setting up a Windows pause image see 
[Prepare a Windows Pause Image for an Internetless Environment](#windows-pause-internetless).
a  

 
## <a id='install'></a> Configure a Windows Worker-Based Kubernetes Cluster
1. Configure a Windows worker plan as described in [Plans](#plans), below.
1. Configure Windows worker networking as described in [Networking](#networking), below.
1. Upload the Windows Server stemcell as described in [Upload the Windows Server Stemcell](#upload-stemcell), below.
1. Click **Apply Changes** to complete the configuration changes.

### <a id='plans'></a> Plans
<%= partial 'plans' %>

### <a id='networking'></a> Networking
<%= partial 'networking-vsphere' %>

### <a id='upload-stemcell'></a> Upload the Windows Server Stemcell
1. When prompted by Ops Manager to upload a stemcell, follow the instructions and provide your previously created 
vSphere stemcell 2019.7 or later for Windows Server version 2019. 

## <a id='create-cluster'></a> Create a Windows Worker-Based Cluster

1. To create a Windows worker-based cluster follow the steps in [Creating Clusters](create-cluster.html).

## <a id='windows-pause-internetless'></a> Prepare a Windows Pause Image for an Internetless Environment

During a Kubernetes pod deployment the Kubernetes Kubelet deploys a pause container. 
For Windows worker-based pod deployment, Kubelet fetches a Windows container image from a Docker registry 
and deploys the fetched image. The Windows container image is typically fetched from the 
Microsoft Docker registry because only Microsoft can distribute Windows container base images.  

This default <%= vars.product_short %> configuration does not support deploying Windows worker-based 
clusters in an internetless environment because the Microsoft Docker registry is not accessible 
from within the environment.  

If your <%= vars.product_short %> installation is in an internetless environment 
you must place a Windows container image in an accessible Docker registry and configure 
<%= vars.product_short %> to fetch the Windows container image from that registry.  

To prepare a Windows pause image for an internetless environment, perform the following:

1. Create an accessible Windows Server 2019 machine in your environment.  
1. Install Docker on this Windows Server 2019 machine.  
1. Configure the machine's Docker daemon to allow non-redistributable artifacts to be pushed to your private registry.  
1. Open a command line on the Windows machine.
1. To download a Windows container image from the Microsoft Docker registry, run the following command:

    ```
    docker pull mcr.microsoft.com/k8s/core/pause:1.2.0
    ```

1. To tag the Windows container image, run the following command:

    ```
    docker tag mcr.microsoft.com/k8s/core/pause:1.2.0 my.private.registry/windows/pause:1.2.0
    ```

1. To upload the Windows container image to your accessible private registry, run the following command:

    ```
    docker push my.private.registry/windows/pause:1.2.0
    ```

Configure the <%= vars.product_tile %> tile with the URI of your private registry-hosted Windows container 
image after uploading it to the registry. 
For more information about configuring the <%= vars.product_tile %> tile's 
**Kubelet customization - Windows pause image location** field, see [Plans](#plans), above.
